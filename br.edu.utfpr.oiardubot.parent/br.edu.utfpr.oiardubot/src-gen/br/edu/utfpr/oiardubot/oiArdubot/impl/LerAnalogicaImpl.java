/**
 * generated by Xtext 2.25.0
 */
package br.edu.utfpr.oiardubot.oiArdubot.impl;

import br.edu.utfpr.oiardubot.oiArdubot.FuncaoLerAnalogica;
import br.edu.utfpr.oiardubot.oiArdubot.LerAnalogica;
import br.edu.utfpr.oiardubot.oiArdubot.OiArdubotPackage;
import br.edu.utfpr.oiardubot.oiArdubot.ReceberValor;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Ler Analogica</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link br.edu.utfpr.oiardubot.oiArdubot.impl.LerAnalogicaImpl#getAtribuicao <em>Atribuicao</em>}</li>
 *   <li>{@link br.edu.utfpr.oiardubot.oiArdubot.impl.LerAnalogicaImpl#getLer <em>Ler</em>}</li>
 * </ul>
 *
 * @generated
 */
public class LerAnalogicaImpl extends ImplementacaoImpl implements LerAnalogica
{
  /**
   * The cached value of the '{@link #getAtribuicao() <em>Atribuicao</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAtribuicao()
   * @generated
   * @ordered
   */
  protected ReceberValor atribuicao;

  /**
   * The cached value of the '{@link #getLer() <em>Ler</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLer()
   * @generated
   * @ordered
   */
  protected FuncaoLerAnalogica ler;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected LerAnalogicaImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return OiArdubotPackage.Literals.LER_ANALOGICA;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ReceberValor getAtribuicao()
  {
    return atribuicao;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAtribuicao(ReceberValor newAtribuicao, NotificationChain msgs)
  {
    ReceberValor oldAtribuicao = atribuicao;
    atribuicao = newAtribuicao;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OiArdubotPackage.LER_ANALOGICA__ATRIBUICAO, oldAtribuicao, newAtribuicao);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAtribuicao(ReceberValor newAtribuicao)
  {
    if (newAtribuicao != atribuicao)
    {
      NotificationChain msgs = null;
      if (atribuicao != null)
        msgs = ((InternalEObject)atribuicao).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OiArdubotPackage.LER_ANALOGICA__ATRIBUICAO, null, msgs);
      if (newAtribuicao != null)
        msgs = ((InternalEObject)newAtribuicao).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OiArdubotPackage.LER_ANALOGICA__ATRIBUICAO, null, msgs);
      msgs = basicSetAtribuicao(newAtribuicao, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OiArdubotPackage.LER_ANALOGICA__ATRIBUICAO, newAtribuicao, newAtribuicao));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FuncaoLerAnalogica getLer()
  {
    return ler;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLer(FuncaoLerAnalogica newLer, NotificationChain msgs)
  {
    FuncaoLerAnalogica oldLer = ler;
    ler = newLer;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OiArdubotPackage.LER_ANALOGICA__LER, oldLer, newLer);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLer(FuncaoLerAnalogica newLer)
  {
    if (newLer != ler)
    {
      NotificationChain msgs = null;
      if (ler != null)
        msgs = ((InternalEObject)ler).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OiArdubotPackage.LER_ANALOGICA__LER, null, msgs);
      if (newLer != null)
        msgs = ((InternalEObject)newLer).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OiArdubotPackage.LER_ANALOGICA__LER, null, msgs);
      msgs = basicSetLer(newLer, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OiArdubotPackage.LER_ANALOGICA__LER, newLer, newLer));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case OiArdubotPackage.LER_ANALOGICA__ATRIBUICAO:
        return basicSetAtribuicao(null, msgs);
      case OiArdubotPackage.LER_ANALOGICA__LER:
        return basicSetLer(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case OiArdubotPackage.LER_ANALOGICA__ATRIBUICAO:
        return getAtribuicao();
      case OiArdubotPackage.LER_ANALOGICA__LER:
        return getLer();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case OiArdubotPackage.LER_ANALOGICA__ATRIBUICAO:
        setAtribuicao((ReceberValor)newValue);
        return;
      case OiArdubotPackage.LER_ANALOGICA__LER:
        setLer((FuncaoLerAnalogica)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case OiArdubotPackage.LER_ANALOGICA__ATRIBUICAO:
        setAtribuicao((ReceberValor)null);
        return;
      case OiArdubotPackage.LER_ANALOGICA__LER:
        setLer((FuncaoLerAnalogica)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case OiArdubotPackage.LER_ANALOGICA__ATRIBUICAO:
        return atribuicao != null;
      case OiArdubotPackage.LER_ANALOGICA__LER:
        return ler != null;
    }
    return super.eIsSet(featureID);
  }

} //LerAnalogicaImpl
