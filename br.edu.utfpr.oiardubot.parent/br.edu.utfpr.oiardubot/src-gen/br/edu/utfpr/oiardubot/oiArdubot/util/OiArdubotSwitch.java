/**
 * generated by Xtext 2.25.0
 */
package br.edu.utfpr.oiardubot.oiArdubot.util;

import br.edu.utfpr.oiardubot.oiArdubot.*;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see br.edu.utfpr.oiardubot.oiArdubot.OiArdubotPackage
 * @generated
 */
public class OiArdubotSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static OiArdubotPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public OiArdubotSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = OiArdubotPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case OiArdubotPackage.MODEL:
      {
        Model model = (Model)theEObject;
        T result = caseModel(model);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OiArdubotPackage.CODIGO:
      {
        Codigo codigo = (Codigo)theEObject;
        T result = caseCodigo(codigo);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OiArdubotPackage.IMPLEMENTACAO:
      {
        Implementacao implementacao = (Implementacao)theEObject;
        T result = caseImplementacao(implementacao);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OiArdubotPackage.PORTA:
      {
        Porta porta = (Porta)theEObject;
        T result = casePorta(porta);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OiArdubotPackage.PORTA_ANALOGICA:
      {
        PortaAnalogica portaAnalogica = (PortaAnalogica)theEObject;
        T result = casePortaAnalogica(portaAnalogica);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OiArdubotPackage.PORTA_DIGITAL:
      {
        PortaDigital portaDigital = (PortaDigital)theEObject;
        T result = casePortaDigital(portaDigital);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OiArdubotPackage.RECEBER_VALOR:
      {
        ReceberValor receberValor = (ReceberValor)theEObject;
        T result = caseReceberValor(receberValor);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OiArdubotPackage.EXISTENTE_VARIAVEL_RECEBE:
      {
        ExistenteVariavelRecebe existenteVariavelRecebe = (ExistenteVariavelRecebe)theEObject;
        T result = caseExistenteVariavelRecebe(existenteVariavelRecebe);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OiArdubotPackage.NOVA_VARIAVEL_RECEBE:
      {
        NovaVariavelRecebe novaVariavelRecebe = (NovaVariavelRecebe)theEObject;
        T result = caseNovaVariavelRecebe(novaVariavelRecebe);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OiArdubotPackage.VARIAVEL_NOME:
      {
        VariavelNome variavelNome = (VariavelNome)theEObject;
        T result = caseVariavelNome(variavelNome);
        if (result == null) result = caseNovaVariavelRecebe(variavelNome);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OiArdubotPackage.VARIAVEL_OU_PORTA:
      {
        VariavelOuPorta variavelOuPorta = (VariavelOuPorta)theEObject;
        T result = caseVariavelOuPorta(variavelOuPorta);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OiArdubotPackage.NOME:
      {
        Nome nome = (Nome)theEObject;
        T result = caseNome(nome);
        if (result == null) result = caseConteudoEscrever(nome);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OiArdubotPackage.CONTEUDO_ESCREVER:
      {
        ConteudoEscrever conteudoEscrever = (ConteudoEscrever)theEObject;
        T result = caseConteudoEscrever(conteudoEscrever);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OiArdubotPackage.TEXTO:
      {
        Texto texto = (Texto)theEObject;
        T result = caseTexto(texto);
        if (result == null) result = caseConteudoEscrever(texto);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OiArdubotPackage.INTEIRO:
      {
        Inteiro inteiro = (Inteiro)theEObject;
        T result = caseInteiro(inteiro);
        if (result == null) result = caseConteudoEscrever(inteiro);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OiArdubotPackage.VARIAVEL:
      {
        Variavel variavel = (Variavel)theEObject;
        T result = caseVariavel(variavel);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OiArdubotPackage.VARIAVEL_EXISTENTE:
      {
        VariavelExistente variavelExistente = (VariavelExistente)theEObject;
        T result = caseVariavelExistente(variavelExistente);
        if (result == null) result = caseImplementacao(variavelExistente);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OiArdubotPackage.CONSTANTE_VARIAVEL:
      {
        ConstanteVariavel constanteVariavel = (ConstanteVariavel)theEObject;
        T result = caseConstanteVariavel(constanteVariavel);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OiArdubotPackage.CONSTANTE:
      {
        Constante constante = (Constante)theEObject;
        T result = caseConstante(constante);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OiArdubotPackage.CONTROLE:
      {
        Controle controle = (Controle)theEObject;
        T result = caseControle(controle);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OiArdubotPackage.LOGICO:
      {
        Logico logico = (Logico)theEObject;
        T result = caseLogico(logico);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OiArdubotPackage.LER:
      {
        Ler ler = (Ler)theEObject;
        T result = caseLer(ler);
        if (result == null) result = caseImplementacao(ler);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OiArdubotPackage.LER_DIGITAL:
      {
        LerDigital lerDigital = (LerDigital)theEObject;
        T result = caseLerDigital(lerDigital);
        if (result == null) result = caseImplementacao(lerDigital);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OiArdubotPackage.FUNCAO_LER_DIGITAL:
      {
        FuncaoLerDigital funcaoLerDigital = (FuncaoLerDigital)theEObject;
        T result = caseFuncaoLerDigital(funcaoLerDigital);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OiArdubotPackage.LER_ANALOGICA:
      {
        LerAnalogica lerAnalogica = (LerAnalogica)theEObject;
        T result = caseLerAnalogica(lerAnalogica);
        if (result == null) result = caseImplementacao(lerAnalogica);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OiArdubotPackage.FUNCAO_LER_ANALOGICA:
      {
        FuncaoLerAnalogica funcaoLerAnalogica = (FuncaoLerAnalogica)theEObject;
        T result = caseFuncaoLerAnalogica(funcaoLerAnalogica);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OiArdubotPackage.ESCREVER:
      {
        Escrever escrever = (Escrever)theEObject;
        T result = caseEscrever(escrever);
        if (result == null) result = caseImplementacao(escrever);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OiArdubotPackage.TELA:
      {
        Tela tela = (Tela)theEObject;
        T result = caseTela(tela);
        if (result == null) result = caseImplementacao(tela);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OiArdubotPackage.BIP:
      {
        Bip bip = (Bip)theEObject;
        T result = caseBip(bip);
        if (result == null) result = caseImplementacao(bip);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OiArdubotPackage.LIGAR:
      {
        Ligar ligar = (Ligar)theEObject;
        T result = caseLigar(ligar);
        if (result == null) result = caseImplementacao(ligar);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OiArdubotPackage.DESLIGAR:
      {
        Desligar desligar = (Desligar)theEObject;
        T result = caseDesligar(desligar);
        if (result == null) result = caseImplementacao(desligar);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OiArdubotPackage.SERVO:
      {
        Servo servo = (Servo)theEObject;
        T result = caseServo(servo);
        if (result == null) result = caseImplementacao(servo);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OiArdubotPackage.MOTOR_DC:
      {
        MotorDC motorDC = (MotorDC)theEObject;
        T result = caseMotorDC(motorDC);
        if (result == null) result = caseImplementacao(motorDC);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OiArdubotPackage.ANDAR:
      {
        Andar andar = (Andar)theEObject;
        T result = caseAndar(andar);
        if (result == null) result = caseImplementacao(andar);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OiArdubotPackage.PARAR:
      {
        Parar parar = (Parar)theEObject;
        T result = caseParar(parar);
        if (result == null) result = caseImplementacao(parar);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OiArdubotPackage.PARA:
      {
        Para para = (Para)theEObject;
        T result = casePara(para);
        if (result == null) result = caseImplementacao(para);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OiArdubotPackage.FIM_PARA:
      {
        FimPara fimPara = (FimPara)theEObject;
        T result = caseFimPara(fimPara);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OiArdubotPackage.ENQUANTO:
      {
        Enquanto enquanto = (Enquanto)theEObject;
        T result = caseEnquanto(enquanto);
        if (result == null) result = caseImplementacao(enquanto);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OiArdubotPackage.REPITA:
      {
        Repita repita = (Repita)theEObject;
        T result = caseRepita(repita);
        if (result == null) result = caseImplementacao(repita);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OiArdubotPackage.SE:
      {
        Se se = (Se)theEObject;
        T result = caseSe(se);
        if (result == null) result = caseImplementacao(se);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OiArdubotPackage.FIMSE:
      {
        Fimse fimse = (Fimse)theEObject;
        T result = caseFimse(fimse);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OiArdubotPackage.SENAO:
      {
        Senao senao = (Senao)theEObject;
        T result = caseSenao(senao);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OiArdubotPackage.ESCOLHA:
      {
        Escolha escolha = (Escolha)theEObject;
        T result = caseEscolha(escolha);
        if (result == null) result = caseImplementacao(escolha);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OiArdubotPackage.CASO:
      {
        Caso caso = (Caso)theEObject;
        T result = caseCaso(caso);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OiArdubotPackage.FUNCAO:
      {
        Funcao funcao = (Funcao)theEObject;
        T result = caseFuncao(funcao);
        if (result == null) result = caseImplementacao(funcao);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OiArdubotPackage.PARAMETRO:
      {
        Parametro parametro = (Parametro)theEObject;
        T result = caseParametro(parametro);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OiArdubotPackage.ESPERA:
      {
        Espera espera = (Espera)theEObject;
        T result = caseEspera(espera);
        if (result == null) result = caseImplementacao(espera);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OiArdubotPackage.SOMA:
      {
        Soma soma = (Soma)theEObject;
        T result = caseSoma(soma);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Model</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Model</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseModel(Model object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Codigo</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Codigo</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCodigo(Codigo object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Implementacao</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Implementacao</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseImplementacao(Implementacao object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Porta</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Porta</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePorta(Porta object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Porta Analogica</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Porta Analogica</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePortaAnalogica(PortaAnalogica object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Porta Digital</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Porta Digital</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePortaDigital(PortaDigital object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Receber Valor</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Receber Valor</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseReceberValor(ReceberValor object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Existente Variavel Recebe</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Existente Variavel Recebe</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseExistenteVariavelRecebe(ExistenteVariavelRecebe object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Nova Variavel Recebe</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Nova Variavel Recebe</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseNovaVariavelRecebe(NovaVariavelRecebe object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Variavel Nome</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Variavel Nome</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseVariavelNome(VariavelNome object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Variavel Ou Porta</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Variavel Ou Porta</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseVariavelOuPorta(VariavelOuPorta object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Nome</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Nome</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseNome(Nome object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Conteudo Escrever</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Conteudo Escrever</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseConteudoEscrever(ConteudoEscrever object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Texto</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Texto</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTexto(Texto object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Inteiro</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Inteiro</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseInteiro(Inteiro object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Variavel</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Variavel</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseVariavel(Variavel object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Variavel Existente</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Variavel Existente</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseVariavelExistente(VariavelExistente object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Constante Variavel</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Constante Variavel</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseConstanteVariavel(ConstanteVariavel object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Constante</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Constante</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseConstante(Constante object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Controle</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Controle</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseControle(Controle object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Logico</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Logico</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLogico(Logico object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Ler</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Ler</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLer(Ler object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Ler Digital</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Ler Digital</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLerDigital(LerDigital object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Funcao Ler Digital</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Funcao Ler Digital</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFuncaoLerDigital(FuncaoLerDigital object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Ler Analogica</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Ler Analogica</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLerAnalogica(LerAnalogica object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Funcao Ler Analogica</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Funcao Ler Analogica</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFuncaoLerAnalogica(FuncaoLerAnalogica object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Escrever</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Escrever</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEscrever(Escrever object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Tela</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Tela</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTela(Tela object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Bip</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Bip</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBip(Bip object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Ligar</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Ligar</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLigar(Ligar object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Desligar</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Desligar</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDesligar(Desligar object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Servo</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Servo</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseServo(Servo object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Motor DC</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Motor DC</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMotorDC(MotorDC object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Andar</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Andar</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAndar(Andar object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Parar</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Parar</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseParar(Parar object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Para</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Para</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePara(Para object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Fim Para</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Fim Para</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFimPara(FimPara object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Enquanto</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Enquanto</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEnquanto(Enquanto object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Repita</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Repita</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRepita(Repita object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Se</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Se</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSe(Se object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Fimse</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Fimse</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFimse(Fimse object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Senao</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Senao</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSenao(Senao object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Escolha</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Escolha</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEscolha(Escolha object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Caso</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Caso</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCaso(Caso object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Funcao</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Funcao</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFuncao(Funcao object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Parametro</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Parametro</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseParametro(Parametro object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Espera</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Espera</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEspera(Espera object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Soma</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Soma</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSoma(Soma object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //OiArdubotSwitch
