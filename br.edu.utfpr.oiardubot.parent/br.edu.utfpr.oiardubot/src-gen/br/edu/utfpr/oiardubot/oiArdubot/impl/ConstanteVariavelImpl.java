/**
 * generated by Xtext 2.25.0
 */
package br.edu.utfpr.oiardubot.oiArdubot.impl;

import br.edu.utfpr.oiardubot.oiArdubot.ConstanteVariavel;
import br.edu.utfpr.oiardubot.oiArdubot.OiArdubotPackage;
import br.edu.utfpr.oiardubot.oiArdubot.Tipo;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Constante Variavel</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link br.edu.utfpr.oiardubot.oiArdubot.impl.ConstanteVariavelImpl#getTipo <em>Tipo</em>}</li>
 *   <li>{@link br.edu.utfpr.oiardubot.oiArdubot.impl.ConstanteVariavelImpl#getVariavelNome <em>Variavel Nome</em>}</li>
 *   <li>{@link br.edu.utfpr.oiardubot.oiArdubot.impl.ConstanteVariavelImpl#getValor <em>Valor</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ConstanteVariavelImpl extends MinimalEObjectImpl.Container implements ConstanteVariavel
{
  /**
   * The default value of the '{@link #getTipo() <em>Tipo</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTipo()
   * @generated
   * @ordered
   */
  protected static final Tipo TIPO_EDEFAULT = Tipo.TEXTO;

  /**
   * The cached value of the '{@link #getTipo() <em>Tipo</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTipo()
   * @generated
   * @ordered
   */
  protected Tipo tipo = TIPO_EDEFAULT;

  /**
   * The default value of the '{@link #getVariavelNome() <em>Variavel Nome</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVariavelNome()
   * @generated
   * @ordered
   */
  protected static final String VARIAVEL_NOME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getVariavelNome() <em>Variavel Nome</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVariavelNome()
   * @generated
   * @ordered
   */
  protected String variavelNome = VARIAVEL_NOME_EDEFAULT;

  /**
   * The default value of the '{@link #getValor() <em>Valor</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValor()
   * @generated
   * @ordered
   */
  protected static final String VALOR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getValor() <em>Valor</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValor()
   * @generated
   * @ordered
   */
  protected String valor = VALOR_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ConstanteVariavelImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return OiArdubotPackage.Literals.CONSTANTE_VARIAVEL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Tipo getTipo()
  {
    return tipo;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTipo(Tipo newTipo)
  {
    Tipo oldTipo = tipo;
    tipo = newTipo == null ? TIPO_EDEFAULT : newTipo;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OiArdubotPackage.CONSTANTE_VARIAVEL__TIPO, oldTipo, tipo));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getVariavelNome()
  {
    return variavelNome;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVariavelNome(String newVariavelNome)
  {
    String oldVariavelNome = variavelNome;
    variavelNome = newVariavelNome;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OiArdubotPackage.CONSTANTE_VARIAVEL__VARIAVEL_NOME, oldVariavelNome, variavelNome));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getValor()
  {
    return valor;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setValor(String newValor)
  {
    String oldValor = valor;
    valor = newValor;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OiArdubotPackage.CONSTANTE_VARIAVEL__VALOR, oldValor, valor));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case OiArdubotPackage.CONSTANTE_VARIAVEL__TIPO:
        return getTipo();
      case OiArdubotPackage.CONSTANTE_VARIAVEL__VARIAVEL_NOME:
        return getVariavelNome();
      case OiArdubotPackage.CONSTANTE_VARIAVEL__VALOR:
        return getValor();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case OiArdubotPackage.CONSTANTE_VARIAVEL__TIPO:
        setTipo((Tipo)newValue);
        return;
      case OiArdubotPackage.CONSTANTE_VARIAVEL__VARIAVEL_NOME:
        setVariavelNome((String)newValue);
        return;
      case OiArdubotPackage.CONSTANTE_VARIAVEL__VALOR:
        setValor((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case OiArdubotPackage.CONSTANTE_VARIAVEL__TIPO:
        setTipo(TIPO_EDEFAULT);
        return;
      case OiArdubotPackage.CONSTANTE_VARIAVEL__VARIAVEL_NOME:
        setVariavelNome(VARIAVEL_NOME_EDEFAULT);
        return;
      case OiArdubotPackage.CONSTANTE_VARIAVEL__VALOR:
        setValor(VALOR_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case OiArdubotPackage.CONSTANTE_VARIAVEL__TIPO:
        return tipo != TIPO_EDEFAULT;
      case OiArdubotPackage.CONSTANTE_VARIAVEL__VARIAVEL_NOME:
        return VARIAVEL_NOME_EDEFAULT == null ? variavelNome != null : !VARIAVEL_NOME_EDEFAULT.equals(variavelNome);
      case OiArdubotPackage.CONSTANTE_VARIAVEL__VALOR:
        return VALOR_EDEFAULT == null ? valor != null : !VALOR_EDEFAULT.equals(valor);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (tipo: ");
    result.append(tipo);
    result.append(", variavelNome: ");
    result.append(variavelNome);
    result.append(", valor: ");
    result.append(valor);
    result.append(')');
    return result.toString();
  }

} //ConstanteVariavelImpl
