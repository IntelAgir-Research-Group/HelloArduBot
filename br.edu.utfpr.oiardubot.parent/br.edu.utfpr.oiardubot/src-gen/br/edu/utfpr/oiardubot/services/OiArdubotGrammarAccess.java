/*
 * generated by Xtext 2.25.0
 */
package br.edu.utfpr.oiardubot.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class OiArdubotGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVarAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cVarVariaveisKeyword_0_0 = (Keyword)cVarAssignment_0.eContents().get(0);
		private final Assignment cVariaveisAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVariaveisVariavelParserRuleCall_1_0 = (RuleCall)cVariaveisAssignment_1.eContents().get(0);
		private final Assignment cConstantesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cConstantesConstanteParserRuleCall_2_0 = (RuleCall)cConstantesAssignment_2.eContents().get(0);
		private final Assignment cIniAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cIniInicioKeyword_3_0 = (Keyword)cIniAssignment_3.eContents().get(0);
		private final Assignment cCodigoAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cCodigoImplementacaoParserRuleCall_4_0 = (RuleCall)cCodigoAssignment_4.eContents().get(0);
		private final Assignment cFimAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final Keyword cFimFimKeyword_5_0 = (Keyword)cFimAssignment_5.eContents().get(0);
		
		//Model:
		//(var+="Variaveis")?
		//(variaveis+=Variavel)*
		//(constantes+=Constante)*
		//ini+="Inicio"
		//(codigo+=Implementacao)*
		//fim+="Fim"
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(var+="Variaveis")?
		//(variaveis+=Variavel)*
		//(constantes+=Constante)*
		//ini+="Inicio"
		//(codigo+=Implementacao)*
		//fim+="Fim"
		public Group getGroup() { return cGroup; }
		
		//(var+="Variaveis")?
		public Assignment getVarAssignment_0() { return cVarAssignment_0; }
		
		//"Variaveis"
		public Keyword getVarVariaveisKeyword_0_0() { return cVarVariaveisKeyword_0_0; }
		
		//(variaveis+=Variavel)*
		public Assignment getVariaveisAssignment_1() { return cVariaveisAssignment_1; }
		
		//Variavel
		public RuleCall getVariaveisVariavelParserRuleCall_1_0() { return cVariaveisVariavelParserRuleCall_1_0; }
		
		//(constantes+=Constante)*
		public Assignment getConstantesAssignment_2() { return cConstantesAssignment_2; }
		
		//Constante
		public RuleCall getConstantesConstanteParserRuleCall_2_0() { return cConstantesConstanteParserRuleCall_2_0; }
		
		//ini+="Inicio"
		public Assignment getIniAssignment_3() { return cIniAssignment_3; }
		
		//"Inicio"
		public Keyword getIniInicioKeyword_3_0() { return cIniInicioKeyword_3_0; }
		
		//(codigo+=Implementacao)*
		public Assignment getCodigoAssignment_4() { return cCodigoAssignment_4; }
		
		//Implementacao
		public RuleCall getCodigoImplementacaoParserRuleCall_4_0() { return cCodigoImplementacaoParserRuleCall_4_0; }
		
		//fim+="Fim"
		public Assignment getFimAssignment_5() { return cFimAssignment_5; }
		
		//"Fim"
		public Keyword getFimFimKeyword_5_0() { return cFimFimKeyword_5_0; }
	}
	public class CodigoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.Codigo");
		private final Assignment cCodeAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cCodeImplementacaoParserRuleCall_0 = (RuleCall)cCodeAssignment.eContents().get(0);
		
		//Codigo:
		//(code+=Implementacao)*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(code+=Implementacao)*
		public Assignment getCodeAssignment() { return cCodeAssignment; }
		
		//Implementacao
		public RuleCall getCodeImplementacaoParserRuleCall_0() { return cCodeImplementacaoParserRuleCall_0; }
	}
	public class ImplementacaoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.Implementacao");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cVariavelExistenteParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cTelaParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cLigarParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cDesligarParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cBipParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cEscolhaParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cParaParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cEnquantoParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cRepitaParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cLerParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cServoParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		private final RuleCall cMotorDCParserRuleCall_12 = (RuleCall)cAlternatives.eContents().get(12);
		private final RuleCall cFuncaoParserRuleCall_13 = (RuleCall)cAlternatives.eContents().get(13);
		private final RuleCall cEsperaParserRuleCall_14 = (RuleCall)cAlternatives.eContents().get(14);
		private final RuleCall cEscreverParserRuleCall_15 = (RuleCall)cAlternatives.eContents().get(15);
		private final RuleCall cLerDigitalParserRuleCall_16 = (RuleCall)cAlternatives.eContents().get(16);
		private final RuleCall cLerAnalogicaParserRuleCall_17 = (RuleCall)cAlternatives.eContents().get(17);
		private final RuleCall cAndarParserRuleCall_18 = (RuleCall)cAlternatives.eContents().get(18);
		private final RuleCall cPararParserRuleCall_19 = (RuleCall)cAlternatives.eContents().get(19);
		
		//Implementacao:
		//Se|VariavelExistente|Tela|Ligar|Desligar|Bip|Escolha|Para|Enquanto|Repita|Ler|Servo|MotorDC|Funcao|Espera|Escrever|LerDigital|LerAnalogica|Andar|Parar
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//Se|VariavelExistente|Tela|Ligar|Desligar|Bip|Escolha|Para|Enquanto|Repita|Ler|Servo|MotorDC|Funcao|Espera|Escrever|LerDigital|LerAnalogica|Andar|Parar
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Se
		public RuleCall getSeParserRuleCall_0() { return cSeParserRuleCall_0; }
		
		//VariavelExistente
		public RuleCall getVariavelExistenteParserRuleCall_1() { return cVariavelExistenteParserRuleCall_1; }
		
		//Tela
		public RuleCall getTelaParserRuleCall_2() { return cTelaParserRuleCall_2; }
		
		//Ligar
		public RuleCall getLigarParserRuleCall_3() { return cLigarParserRuleCall_3; }
		
		//Desligar
		public RuleCall getDesligarParserRuleCall_4() { return cDesligarParserRuleCall_4; }
		
		//Bip
		public RuleCall getBipParserRuleCall_5() { return cBipParserRuleCall_5; }
		
		//Escolha
		public RuleCall getEscolhaParserRuleCall_6() { return cEscolhaParserRuleCall_6; }
		
		//Para
		public RuleCall getParaParserRuleCall_7() { return cParaParserRuleCall_7; }
		
		//Enquanto
		public RuleCall getEnquantoParserRuleCall_8() { return cEnquantoParserRuleCall_8; }
		
		//Repita
		public RuleCall getRepitaParserRuleCall_9() { return cRepitaParserRuleCall_9; }
		
		//Ler
		public RuleCall getLerParserRuleCall_10() { return cLerParserRuleCall_10; }
		
		//Servo
		public RuleCall getServoParserRuleCall_11() { return cServoParserRuleCall_11; }
		
		//MotorDC
		public RuleCall getMotorDCParserRuleCall_12() { return cMotorDCParserRuleCall_12; }
		
		//Funcao
		public RuleCall getFuncaoParserRuleCall_13() { return cFuncaoParserRuleCall_13; }
		
		//Espera
		public RuleCall getEsperaParserRuleCall_14() { return cEsperaParserRuleCall_14; }
		
		//Escrever
		public RuleCall getEscreverParserRuleCall_15() { return cEscreverParserRuleCall_15; }
		
		//LerDigital
		public RuleCall getLerDigitalParserRuleCall_16() { return cLerDigitalParserRuleCall_16; }
		
		//LerAnalogica
		public RuleCall getLerAnalogicaParserRuleCall_17() { return cLerAnalogicaParserRuleCall_17; }
		
		//Andar
		public RuleCall getAndarParserRuleCall_18() { return cAndarParserRuleCall_18; }
		
		//Parar
		public RuleCall getPararParserRuleCall_19() { return cPararParserRuleCall_19; }
	}
	public class PortaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.Porta");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cNameAlternatives_0 = (Alternatives)cNameAssignment.eContents().get(0);
		private final RuleCall cNamePortaDigitalParserRuleCall_0_0 = (RuleCall)cNameAlternatives_0.eContents().get(0);
		private final RuleCall cNamePortaAnalogicaParserRuleCall_0_1 = (RuleCall)cNameAlternatives_0.eContents().get(1);
		
		//Porta:
		//name=(PortaDigital|PortaAnalogica)
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name=(PortaDigital|PortaAnalogica)
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//(PortaDigital|PortaAnalogica)
		public Alternatives getNameAlternatives_0() { return cNameAlternatives_0; }
		
		//PortaDigital
		public RuleCall getNamePortaDigitalParserRuleCall_0_0() { return cNamePortaDigitalParserRuleCall_0_0; }
		
		//PortaAnalogica
		public RuleCall getNamePortaAnalogicaParserRuleCall_0_1() { return cNamePortaAnalogicaParserRuleCall_0_1; }
	}
	public class PortaAnalogicaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.PortaAnalogica");
		private final Assignment cValorAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValorAnalogicaOuIdParserRuleCall_0 = (RuleCall)cValorAssignment.eContents().get(0);
		
		//PortaAnalogica:
		//valor=AnalogicaOuId
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//valor=AnalogicaOuId
		public Assignment getValorAssignment() { return cValorAssignment; }
		
		//AnalogicaOuId
		public RuleCall getValorAnalogicaOuIdParserRuleCall_0() { return cValorAnalogicaOuIdParserRuleCall_0; }
	}
	public class AnalogicaOuIdElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.AnalogicaOuId");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cANALOGICATerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//AnalogicaOuId:
		//ANALOGICA | ID
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ANALOGICA | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ANALOGICA
		public RuleCall getANALOGICATerminalRuleCall_0() { return cANALOGICATerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class PortaDigitalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.PortaDigital");
		private final Assignment cValorAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValorDigitalOuIdParserRuleCall_0 = (RuleCall)cValorAssignment.eContents().get(0);
		
		//PortaDigital:
		//valor=DigitalOuId
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//valor=DigitalOuId
		public Assignment getValorAssignment() { return cValorAssignment; }
		
		//DigitalOuId
		public RuleCall getValorDigitalOuIdParserRuleCall_0() { return cValorDigitalOuIdParserRuleCall_0; }
	}
	public class DigitalOuIdElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.DigitalOuId");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//DigitalOuId:
		//INT | ID
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//INT | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_0() { return cINTTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class ReceberValorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.ReceberValor");
		private final Assignment cTipoAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cTipoAlternatives_0 = (Alternatives)cTipoAssignment.eContents().get(0);
		private final RuleCall cTipoExistenteVariavelRecebeParserRuleCall_0_0 = (RuleCall)cTipoAlternatives_0.eContents().get(0);
		private final RuleCall cTipoNovaVariavelRecebeParserRuleCall_0_1 = (RuleCall)cTipoAlternatives_0.eContents().get(1);
		
		//ReceberValor:
		//tipo=(ExistenteVariavelRecebe|NovaVariavelRecebe)
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//tipo=(ExistenteVariavelRecebe|NovaVariavelRecebe)
		public Assignment getTipoAssignment() { return cTipoAssignment; }
		
		//(ExistenteVariavelRecebe|NovaVariavelRecebe)
		public Alternatives getTipoAlternatives_0() { return cTipoAlternatives_0; }
		
		//ExistenteVariavelRecebe
		public RuleCall getTipoExistenteVariavelRecebeParserRuleCall_0_0() { return cTipoExistenteVariavelRecebeParserRuleCall_0_0; }
		
		//NovaVariavelRecebe
		public RuleCall getTipoNovaVariavelRecebeParserRuleCall_0_1() { return cTipoNovaVariavelRecebeParserRuleCall_0_1; }
	}
	public class ExistenteVariavelRecebeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.ExistenteVariavelRecebe");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameValorReferenciaParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cLessThanSignHyphenMinusKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//ExistenteVariavelRecebe:
		//name=ValorReferencia '<-'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ValorReferencia '<-'
		public Group getGroup() { return cGroup; }
		
		//name=ValorReferencia
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ValorReferencia
		public RuleCall getNameValorReferenciaParserRuleCall_0_0() { return cNameValorReferenciaParserRuleCall_0_0; }
		
		//'<-'
		public Keyword getLessThanSignHyphenMinusKeyword_1() { return cLessThanSignHyphenMinusKeyword_1; }
	}
	public class ValorReferenciaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.ValorReferencia");
		private final RuleCall cIDTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//ValorReferencia:
		//ID
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ID
		public RuleCall getIDTerminalRuleCall() { return cIDTerminalRuleCall; }
	}
	public class NovaVariavelRecebeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.NovaVariavelRecebe");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cVariavelNomeParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cLessThanSignHyphenMinusKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//NovaVariavelRecebe:
		//VariavelNome '<-'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//VariavelNome '<-'
		public Group getGroup() { return cGroup; }
		
		//VariavelNome
		public RuleCall getVariavelNomeParserRuleCall_0() { return cVariavelNomeParserRuleCall_0; }
		
		//'<-'
		public Keyword getLessThanSignHyphenMinusKeyword_1() { return cLessThanSignHyphenMinusKeyword_1; }
	}
	public class VariavelNomeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.VariavelNome");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTipoAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTipoTipoEnumRuleCall_0_0 = (RuleCall)cTipoAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//VariavelNome:
		//tipo=Tipo name=ID
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//tipo=Tipo name=ID
		public Group getGroup() { return cGroup; }
		
		//tipo=Tipo
		public Assignment getTipoAssignment_0() { return cTipoAssignment_0; }
		
		//Tipo
		public RuleCall getTipoTipoEnumRuleCall_0_0() { return cTipoTipoEnumRuleCall_0_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}
	public class VariavelOuPortaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.VariavelOuPorta");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNamePortaParserRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//VariavelOuPorta:
		//name=Porta
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name=Porta
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//Porta
		public RuleCall getNamePortaParserRuleCall_0() { return cNamePortaParserRuleCall_0; }
	}
	public class VariavelOuNumeroElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.VariavelOuNumero");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//VariavelOuNumero:
		//ID|INT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ID|INT
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class NomeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.Nome");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//Nome:
		//name=ID
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0() { return cNameIDTerminalRuleCall_0; }
	}
	public class ConteudoEscreverElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.ConteudoEscrever");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNomeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cTextoParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cInteiroParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//ConteudoEscrever:
		//Nome | Texto | Inteiro
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//Nome | Texto | Inteiro
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Nome
		public RuleCall getNomeParserRuleCall_0() { return cNomeParserRuleCall_0; }
		
		//Texto
		public RuleCall getTextoParserRuleCall_1() { return cTextoParserRuleCall_1; }
		
		//Inteiro
		public RuleCall getInteiroParserRuleCall_2() { return cInteiroParserRuleCall_2; }
	}
	public class TextoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.Texto");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//Texto:
		//name=STRING
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name=STRING
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_0() { return cNameSTRINGTerminalRuleCall_0; }
	}
	public class InteiroElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.Inteiro");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameINTTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//Inteiro:
		//name=INT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name=INT
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//INT
		public RuleCall getNameINTTerminalRuleCall_0() { return cNameINTTerminalRuleCall_0; }
	}
	public class TextoOuNumeroElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.TextoOuNumero");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//TextoOuNumero:
		//STRING | INT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | INT
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class ValorLiteralElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.ValorLiteral");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTextoOuNumeroParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cANALOGICATerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ValorLiteral:
		//TextoOuNumero | ANALOGICA
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//TextoOuNumero | ANALOGICA
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//TextoOuNumero
		public RuleCall getTextoOuNumeroParserRuleCall_0() { return cTextoOuNumeroParserRuleCall_0; }
		
		//ANALOGICA
		public RuleCall getANALOGICATerminalRuleCall_1() { return cANALOGICATerminalRuleCall_1; }
	}
	public class VariavelValorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.VariavelValor");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cValorLiteralParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cValorReferenciaParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//VariavelValor:
		//ValorLiteral | ValorReferencia
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ValorLiteral | ValorReferencia
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ValorLiteral
		public RuleCall getValorLiteralParserRuleCall_0() { return cValorLiteralParserRuleCall_0; }
		
		//ValorReferencia
		public RuleCall getValorReferenciaParserRuleCall_1() { return cValorReferenciaParserRuleCall_1; }
	}
	public class DisplayValorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.DisplayValor");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSTRINGTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//DisplayValor:
		//ID | STRING | INT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ID | STRING | INT
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_1() { return cSTRINGTerminalRuleCall_1; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_2() { return cINTTerminalRuleCall_2; }
	}
	public class VariavelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.Variavel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVariavelNomeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cVariavelNomeVariavelNomeParserRuleCall_0_0 = (RuleCall)cVariavelNomeAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLessThanSignHyphenMinusKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cValorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cValorVariavelValorParserRuleCall_1_1_0 = (RuleCall)cValorAssignment_1_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//Variavel:
		//variavelNome=VariavelNome ('<-' valor=VariavelValor)?';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//variavelNome=VariavelNome ('<-' valor=VariavelValor)?';'
		public Group getGroup() { return cGroup; }
		
		//variavelNome=VariavelNome
		public Assignment getVariavelNomeAssignment_0() { return cVariavelNomeAssignment_0; }
		
		//VariavelNome
		public RuleCall getVariavelNomeVariavelNomeParserRuleCall_0_0() { return cVariavelNomeVariavelNomeParserRuleCall_0_0; }
		
		//('<-' valor=VariavelValor)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'<-'
		public Keyword getLessThanSignHyphenMinusKeyword_1_0() { return cLessThanSignHyphenMinusKeyword_1_0; }
		
		//valor=VariavelValor
		public Assignment getValorAssignment_1_1() { return cValorAssignment_1_1; }
		
		//VariavelValor
		public RuleCall getValorVariavelValorParserRuleCall_1_1_0() { return cValorVariavelValorParserRuleCall_1_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class VariavelExistenteElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.VariavelExistente");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cAtribuicaoAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cAtribuicaoExistenteVariavelRecebeParserRuleCall_0_0 = (RuleCall)cAtribuicaoAssignment_0.eContents().get(0);
		private final Assignment cValorAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValorVariavelValorParserRuleCall_1_0 = (RuleCall)cValorAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//VariavelExistente:
		//atribuicao=ExistenteVariavelRecebe valor=VariavelValor';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//atribuicao=ExistenteVariavelRecebe valor=VariavelValor';'
		public Group getGroup() { return cGroup; }
		
		//atribuicao=ExistenteVariavelRecebe
		public Assignment getAtribuicaoAssignment_0() { return cAtribuicaoAssignment_0; }
		
		//ExistenteVariavelRecebe
		public RuleCall getAtribuicaoExistenteVariavelRecebeParserRuleCall_0_0() { return cAtribuicaoExistenteVariavelRecebeParserRuleCall_0_0; }
		
		//valor=VariavelValor
		public Assignment getValorAssignment_1() { return cValorAssignment_1; }
		
		//VariavelValor
		public RuleCall getValorVariavelValorParserRuleCall_1_0() { return cValorVariavelValorParserRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class ConstanteVariavelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.ConstanteVariavel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTipoAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTipoTipoEnumRuleCall_0_0 = (RuleCall)cTipoAssignment_0.eContents().get(0);
		private final Assignment cVariavelNomeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVariavelNomeIDTerminalRuleCall_1_0 = (RuleCall)cVariavelNomeAssignment_1.eContents().get(0);
		private final Keyword cLessThanSignHyphenMinusKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValorAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValorVariavelValorParserRuleCall_3_0 = (RuleCall)cValorAssignment_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ConstanteVariavel:
		//tipo=Tipo variavelNome=ID '<-' valor=VariavelValor';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//tipo=Tipo variavelNome=ID '<-' valor=VariavelValor';'
		public Group getGroup() { return cGroup; }
		
		//tipo=Tipo
		public Assignment getTipoAssignment_0() { return cTipoAssignment_0; }
		
		//Tipo
		public RuleCall getTipoTipoEnumRuleCall_0_0() { return cTipoTipoEnumRuleCall_0_0; }
		
		//variavelNome=ID
		public Assignment getVariavelNomeAssignment_1() { return cVariavelNomeAssignment_1; }
		
		//ID
		public RuleCall getVariavelNomeIDTerminalRuleCall_1_0() { return cVariavelNomeIDTerminalRuleCall_1_0; }
		
		//'<-'
		public Keyword getLessThanSignHyphenMinusKeyword_2() { return cLessThanSignHyphenMinusKeyword_2; }
		
		//valor=VariavelValor
		public Assignment getValorAssignment_3() { return cValorAssignment_3; }
		
		//VariavelValor
		public RuleCall getValorVariavelValorParserRuleCall_3_0() { return cValorVariavelValorParserRuleCall_3_0; }
		
		//';'
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}
	public class ConstanteElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.Constante");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCONSTANTEKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cVariavelAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVariavelConstanteVariavelParserRuleCall_1_0 = (RuleCall)cVariavelAssignment_1.eContents().get(0);
		
		//Constante:
		//'CONSTANTE' variavel=ConstanteVariavel
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'CONSTANTE' variavel=ConstanteVariavel
		public Group getGroup() { return cGroup; }
		
		//'CONSTANTE'
		public Keyword getCONSTANTEKeyword_0() { return cCONSTANTEKeyword_0; }
		
		//variavel=ConstanteVariavel
		public Assignment getVariavelAssignment_1() { return cVariavelAssignment_1; }
		
		//ConstanteVariavel
		public RuleCall getVariavelConstanteVariavelParserRuleCall_1_0() { return cVariavelConstanteVariavelParserRuleCall_1_0; }
	}
	public class ControleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.Controle");
		private final Assignment cParasAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cParasParaParserRuleCall_0 = (RuleCall)cParasAssignment.eContents().get(0);
		
		//// Controle
		//Controle:
		////ses+=Se
		//paras+=Para
		//;
		@Override public ParserRule getRule() { return rule; }
		
		////ses+=Se
		//paras+=Para
		public Assignment getParasAssignment() { return cParasAssignment; }
		
		//Para
		public RuleCall getParasParaParserRuleCall_0() { return cParasParaParserRuleCall_0; }
	}
	public class LogicoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.Logico");
		private final Assignment cRelationAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cRelationAlternatives_0 = (Alternatives)cRelationAssignment.eContents().get(0);
		private final Keyword cRelationEqualsSignKeyword_0_0 = (Keyword)cRelationAlternatives_0.eContents().get(0);
		private final Keyword cRelationLessThanSignGreaterThanSignKeyword_0_1 = (Keyword)cRelationAlternatives_0.eContents().get(1);
		private final Keyword cRelationLessThanSignKeyword_0_2 = (Keyword)cRelationAlternatives_0.eContents().get(2);
		private final Keyword cRelationLessThanSignEqualsSignKeyword_0_3 = (Keyword)cRelationAlternatives_0.eContents().get(3);
		private final Keyword cRelationGreaterThanSignEqualsSignKeyword_0_4 = (Keyword)cRelationAlternatives_0.eContents().get(4);
		private final Keyword cRelationGreaterThanSignKeyword_0_5 = (Keyword)cRelationAlternatives_0.eContents().get(5);
		
		//Logico:
		//relation = ("="|"<>"|"<"|"<="|">="|">")
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//relation = ("="|"<>"|"<"|"<="|">="|">")
		public Assignment getRelationAssignment() { return cRelationAssignment; }
		
		//("="|"<>"|"<"|"<="|">="|">")
		public Alternatives getRelationAlternatives_0() { return cRelationAlternatives_0; }
		
		//"="
		public Keyword getRelationEqualsSignKeyword_0_0() { return cRelationEqualsSignKeyword_0_0; }
		
		//"<>"
		public Keyword getRelationLessThanSignGreaterThanSignKeyword_0_1() { return cRelationLessThanSignGreaterThanSignKeyword_0_1; }
		
		//"<"
		public Keyword getRelationLessThanSignKeyword_0_2() { return cRelationLessThanSignKeyword_0_2; }
		
		//"<="
		public Keyword getRelationLessThanSignEqualsSignKeyword_0_3() { return cRelationLessThanSignEqualsSignKeyword_0_3; }
		
		//">="
		public Keyword getRelationGreaterThanSignEqualsSignKeyword_0_4() { return cRelationGreaterThanSignEqualsSignKeyword_0_4; }
		
		//">"
		public Keyword getRelationGreaterThanSignKeyword_0_5() { return cRelationGreaterThanSignKeyword_0_5; }
	}
	public class LerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.Ler");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cAtribuicaoAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cAtribuicaoReceberValorParserRuleCall_0_0 = (RuleCall)cAtribuicaoAssignment_0.eContents().get(0);
		private final Assignment cLerAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cLerFuncaoLerParserRuleCall_1_0 = (RuleCall)cLerAssignment_1.eContents().get(0);
		
		//// SENSORIAMENTO
		//// SENSORIAMENTO
		//// SENSORIAMENTO
		//// LER
		////Ler:
		//// atribuicao=ReceberValor ler=FuncaoLer
		////;
		////FuncaoLer:
		//// 'ler' '(' tipoPorta=TipoPorta "," porta=Porta ')' ';'
		////;
		//Ler:
		//atribuicao=ReceberValor ler=FuncaoLer
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//atribuicao=ReceberValor ler=FuncaoLer
		public Group getGroup() { return cGroup; }
		
		//atribuicao=ReceberValor
		public Assignment getAtribuicaoAssignment_0() { return cAtribuicaoAssignment_0; }
		
		//ReceberValor
		public RuleCall getAtribuicaoReceberValorParserRuleCall_0_0() { return cAtribuicaoReceberValorParserRuleCall_0_0; }
		
		//ler=FuncaoLer
		public Assignment getLerAssignment_1() { return cLerAssignment_1; }
		
		//FuncaoLer
		public RuleCall getLerFuncaoLerParserRuleCall_1_0() { return cLerFuncaoLerParserRuleCall_1_0; }
	}
	public class FuncaoLerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.FuncaoLer");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//FuncaoLer:
		//'ler' '(' ')' ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'ler' '(' ')' ';'
		public Group getGroup() { return cGroup; }
		
		//'ler'
		public Keyword getLerKeyword_0() { return cLerKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2() { return cRightParenthesisKeyword_2; }
		
		//';'
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}
	public class LerDigitalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.LerDigital");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cAtribuicaoAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cAtribuicaoReceberValorParserRuleCall_0_0 = (RuleCall)cAtribuicaoAssignment_0.eContents().get(0);
		private final Assignment cLerAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cLerFuncaoLerDigitalParserRuleCall_1_0 = (RuleCall)cLerAssignment_1.eContents().get(0);
		
		//LerDigital:
		//atribuicao=ReceberValor ler=FuncaoLerDigital
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//atribuicao=ReceberValor ler=FuncaoLerDigital
		public Group getGroup() { return cGroup; }
		
		//atribuicao=ReceberValor
		public Assignment getAtribuicaoAssignment_0() { return cAtribuicaoAssignment_0; }
		
		//ReceberValor
		public RuleCall getAtribuicaoReceberValorParserRuleCall_0_0() { return cAtribuicaoReceberValorParserRuleCall_0_0; }
		
		//ler=FuncaoLerDigital
		public Assignment getLerAssignment_1() { return cLerAssignment_1; }
		
		//FuncaoLerDigital
		public RuleCall getLerFuncaoLerDigitalParserRuleCall_1_0() { return cLerFuncaoLerDigitalParserRuleCall_1_0; }
	}
	public class FuncaoLerDigitalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.FuncaoLerDigital");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLerDigitalKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPortaAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPortaPortaParserRuleCall_2_0 = (RuleCall)cPortaAssignment_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//FuncaoLerDigital:
		//'lerDigital' '(' porta=Porta ')' ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'lerDigital' '(' porta=Porta ')' ';'
		public Group getGroup() { return cGroup; }
		
		//'lerDigital'
		public Keyword getLerDigitalKeyword_0() { return cLerDigitalKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//porta=Porta
		public Assignment getPortaAssignment_2() { return cPortaAssignment_2; }
		
		//Porta
		public RuleCall getPortaPortaParserRuleCall_2_0() { return cPortaPortaParserRuleCall_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
		
		//';'
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}
	public class LerAnalogicaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.LerAnalogica");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cAtribuicaoAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cAtribuicaoReceberValorParserRuleCall_0_0 = (RuleCall)cAtribuicaoAssignment_0.eContents().get(0);
		private final Assignment cLerAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cLerFuncaoLerAnalogicaParserRuleCall_1_0 = (RuleCall)cLerAssignment_1.eContents().get(0);
		
		//LerAnalogica:
		//atribuicao=ReceberValor ler=FuncaoLerAnalogica
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//atribuicao=ReceberValor ler=FuncaoLerAnalogica
		public Group getGroup() { return cGroup; }
		
		//atribuicao=ReceberValor
		public Assignment getAtribuicaoAssignment_0() { return cAtribuicaoAssignment_0; }
		
		//ReceberValor
		public RuleCall getAtribuicaoReceberValorParserRuleCall_0_0() { return cAtribuicaoReceberValorParserRuleCall_0_0; }
		
		//ler=FuncaoLerAnalogica
		public Assignment getLerAssignment_1() { return cLerAssignment_1; }
		
		//FuncaoLerAnalogica
		public RuleCall getLerFuncaoLerAnalogicaParserRuleCall_1_0() { return cLerFuncaoLerAnalogicaParserRuleCall_1_0; }
	}
	public class FuncaoLerAnalogicaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.FuncaoLerAnalogica");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLerAnalogicaKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPortaAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPortaPortaParserRuleCall_2_0 = (RuleCall)cPortaAssignment_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//FuncaoLerAnalogica:
		//'lerAnalogica' '(' porta=Porta ')' ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'lerAnalogica' '(' porta=Porta ')' ';'
		public Group getGroup() { return cGroup; }
		
		//'lerAnalogica'
		public Keyword getLerAnalogicaKeyword_0() { return cLerAnalogicaKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//porta=Porta
		public Assignment getPortaAssignment_2() { return cPortaAssignment_2; }
		
		//Porta
		public RuleCall getPortaPortaParserRuleCall_2_0() { return cPortaPortaParserRuleCall_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
		
		//';'
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}
	public class EscreverElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.Escrever");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEscreverKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cMensagemAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cMensagemConteudoEscreverParserRuleCall_1_0 = (RuleCall)cMensagemAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//// NOTIFICACAO
		//// NOTIFICACAO
		//// NOTIFICACAO
		//// DISPLAY, BIP, LIGAR
		//Escrever:
		//'escrever' mensagem=ConteudoEscrever';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'escrever' mensagem=ConteudoEscrever';'
		public Group getGroup() { return cGroup; }
		
		//'escrever'
		public Keyword getEscreverKeyword_0() { return cEscreverKeyword_0; }
		
		//mensagem=ConteudoEscrever
		public Assignment getMensagemAssignment_1() { return cMensagemAssignment_1; }
		
		//ConteudoEscrever
		public RuleCall getMensagemConteudoEscreverParserRuleCall_1_0() { return cMensagemConteudoEscreverParserRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class TelaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.Tela");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTelaKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cMensagemAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cMensagemDisplayValorParserRuleCall_1_0 = (RuleCall)cMensagemAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//Tela:
		//'tela' mensagem=DisplayValor ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'tela' mensagem=DisplayValor ';'
		public Group getGroup() { return cGroup; }
		
		//'tela'
		public Keyword getTelaKeyword_0() { return cTelaKeyword_0; }
		
		//mensagem=DisplayValor
		public Assignment getMensagemAssignment_1() { return cMensagemAssignment_1; }
		
		//DisplayValor
		public RuleCall getMensagemDisplayValorParserRuleCall_1_0() { return cMensagemDisplayValorParserRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class BipElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.Bip");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBipKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTipoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTipoTipoBipParserRuleCall_2_0 = (RuleCall)cTipoAssignment_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Bip:
		//'bip' '(' tipo=TipoBip ')' ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'bip' '(' tipo=TipoBip ')' ';'
		public Group getGroup() { return cGroup; }
		
		//'bip'
		public Keyword getBipKeyword_0() { return cBipKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//tipo=TipoBip
		public Assignment getTipoAssignment_2() { return cTipoAssignment_2; }
		
		//TipoBip
		public RuleCall getTipoTipoBipParserRuleCall_2_0() { return cTipoTipoBipParserRuleCall_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
		
		//';'
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}
	public class TipoBipElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.TipoBip");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cCurtoKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cMedioKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cLongoKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		
		//TipoBip:
		//'curto'|'medio'|'longo'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'curto'|'medio'|'longo'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'curto'
		public Keyword getCurtoKeyword_0() { return cCurtoKeyword_0; }
		
		//'medio'
		public Keyword getMedioKeyword_1() { return cMedioKeyword_1; }
		
		//'longo'
		public Keyword getLongoKeyword_2() { return cLongoKeyword_2; }
	}
	public class LigarElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.Ligar");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLigarKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTipoPortaAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTipoPortaTipoPortaEnumRuleCall_2_0 = (RuleCall)cTipoPortaAssignment_2.eContents().get(0);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cPortaAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cPortaPortaParserRuleCall_4_0 = (RuleCall)cPortaAssignment_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Ligar:
		//'ligar' '(' tipoPorta=TipoPorta "," porta=Porta ')' ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'ligar' '(' tipoPorta=TipoPorta "," porta=Porta ')' ';'
		public Group getGroup() { return cGroup; }
		
		//'ligar'
		public Keyword getLigarKeyword_0() { return cLigarKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//tipoPorta=TipoPorta
		public Assignment getTipoPortaAssignment_2() { return cTipoPortaAssignment_2; }
		
		//TipoPorta
		public RuleCall getTipoPortaTipoPortaEnumRuleCall_2_0() { return cTipoPortaTipoPortaEnumRuleCall_2_0; }
		
		//","
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//porta=Porta
		public Assignment getPortaAssignment_4() { return cPortaAssignment_4; }
		
		//Porta
		public RuleCall getPortaPortaParserRuleCall_4_0() { return cPortaPortaParserRuleCall_4_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
		
		//';'
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}
	public class DesligarElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.Desligar");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDesligarKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTipoPortaAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTipoPortaTipoPortaEnumRuleCall_2_0 = (RuleCall)cTipoPortaAssignment_2.eContents().get(0);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cPortaAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cPortaPortaParserRuleCall_4_0 = (RuleCall)cPortaAssignment_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Desligar:
		//'desligar' '(' tipoPorta=TipoPorta "," porta=Porta ')' ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'desligar' '(' tipoPorta=TipoPorta "," porta=Porta ')' ';'
		public Group getGroup() { return cGroup; }
		
		//'desligar'
		public Keyword getDesligarKeyword_0() { return cDesligarKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//tipoPorta=TipoPorta
		public Assignment getTipoPortaAssignment_2() { return cTipoPortaAssignment_2; }
		
		//TipoPorta
		public RuleCall getTipoPortaTipoPortaEnumRuleCall_2_0() { return cTipoPortaTipoPortaEnumRuleCall_2_0; }
		
		//","
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//porta=Porta
		public Assignment getPortaAssignment_4() { return cPortaAssignment_4; }
		
		//Porta
		public RuleCall getPortaPortaParserRuleCall_4_0() { return cPortaPortaParserRuleCall_4_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
		
		//';'
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}
	public class ServoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.Servo");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGirarServoKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPortaAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPortaVariavelOuPortaParserRuleCall_2_0 = (RuleCall)cPortaAssignment_2.eContents().get(0);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cPosicaoAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cPosicaoINTTerminalRuleCall_4_0 = (RuleCall)cPosicaoAssignment_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//// MOVIMENTO
		//// MOVIMENTO
		//// MOVIMENTO
		//// SERVO, LIGARMOTORDC, DESLIGARMOTORDC
		//Servo:
		//'girarServo' '(' porta=VariavelOuPorta','posicao=INT ')' ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'girarServo' '(' porta=VariavelOuPorta','posicao=INT ')' ';'
		public Group getGroup() { return cGroup; }
		
		//'girarServo'
		public Keyword getGirarServoKeyword_0() { return cGirarServoKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//porta=VariavelOuPorta
		public Assignment getPortaAssignment_2() { return cPortaAssignment_2; }
		
		//VariavelOuPorta
		public RuleCall getPortaVariavelOuPortaParserRuleCall_2_0() { return cPortaVariavelOuPortaParserRuleCall_2_0; }
		
		//','
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//posicao=INT
		public Assignment getPosicaoAssignment_4() { return cPosicaoAssignment_4; }
		
		//INT
		public RuleCall getPosicaoINTTerminalRuleCall_4_0() { return cPosicaoINTTerminalRuleCall_4_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
		
		//';'
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}
	public class MotorDCElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.MotorDC");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMotorDCKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cEstadoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cEstadoINTTerminalRuleCall_2_0 = (RuleCall)cEstadoAssignment_2.eContents().get(0);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cDirecaoAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cDirecaoDirecaoEnumRuleCall_4_0 = (RuleCall)cDirecaoAssignment_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//MotorDC:
		//'motorDC' '(' estado=INT ',' direcao=Direcao ')' ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'motorDC' '(' estado=INT ',' direcao=Direcao ')' ';'
		public Group getGroup() { return cGroup; }
		
		//'motorDC'
		public Keyword getMotorDCKeyword_0() { return cMotorDCKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//estado=INT
		public Assignment getEstadoAssignment_2() { return cEstadoAssignment_2; }
		
		//INT
		public RuleCall getEstadoINTTerminalRuleCall_2_0() { return cEstadoINTTerminalRuleCall_2_0; }
		
		//','
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//direcao=Direcao
		public Assignment getDirecaoAssignment_4() { return cDirecaoAssignment_4; }
		
		//Direcao
		public RuleCall getDirecaoDirecaoEnumRuleCall_4_0() { return cDirecaoDirecaoEnumRuleCall_4_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
		
		//';'
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}
	public class AndarElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.Andar");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAndarKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPortaAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPortaVariavelOuPortaParserRuleCall_2_0 = (RuleCall)cPortaAssignment_2.eContents().get(0);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cVelocidadeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cVelocidadeINTTerminalRuleCall_4_0 = (RuleCall)cVelocidadeAssignment_4.eContents().get(0);
		private final Keyword cCommaKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cDirecaoAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cDirecaoDirecaoEnumRuleCall_6_0 = (RuleCall)cDirecaoAssignment_6.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cSemicolonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Andar:
		//'andar' '(' porta=VariavelOuPorta ',' velocidade=INT ',' direcao=Direcao ')' ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'andar' '(' porta=VariavelOuPorta ',' velocidade=INT ',' direcao=Direcao ')' ';'
		public Group getGroup() { return cGroup; }
		
		//'andar'
		public Keyword getAndarKeyword_0() { return cAndarKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//porta=VariavelOuPorta
		public Assignment getPortaAssignment_2() { return cPortaAssignment_2; }
		
		//VariavelOuPorta
		public RuleCall getPortaVariavelOuPortaParserRuleCall_2_0() { return cPortaVariavelOuPortaParserRuleCall_2_0; }
		
		//','
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//velocidade=INT
		public Assignment getVelocidadeAssignment_4() { return cVelocidadeAssignment_4; }
		
		//INT
		public RuleCall getVelocidadeINTTerminalRuleCall_4_0() { return cVelocidadeINTTerminalRuleCall_4_0; }
		
		//','
		public Keyword getCommaKeyword_5() { return cCommaKeyword_5; }
		
		//direcao=Direcao
		public Assignment getDirecaoAssignment_6() { return cDirecaoAssignment_6; }
		
		//Direcao
		public RuleCall getDirecaoDirecaoEnumRuleCall_6_0() { return cDirecaoDirecaoEnumRuleCall_6_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }
		
		//';'
		public Keyword getSemicolonKeyword_8() { return cSemicolonKeyword_8; }
	}
	public class PararElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.Parar");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPararKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPortaAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPortaPortaParserRuleCall_2_0 = (RuleCall)cPortaAssignment_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Parar:
		//'parar' '(' porta=Porta ')' ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'parar' '(' porta=Porta ')' ';'
		public Group getGroup() { return cGroup; }
		
		//'parar'
		public Keyword getPararKeyword_0() { return cPararKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//porta=Porta
		public Assignment getPortaAssignment_2() { return cPortaAssignment_2; }
		
		//Porta
		public RuleCall getPortaPortaParserRuleCall_2_0() { return cPortaPortaParserRuleCall_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
		
		//';'
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}
	public class ParaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.Para");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cParaKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cVariavelAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVariavelIDTerminalRuleCall_1_0 = (RuleCall)cVariavelAssignment_1.eContents().get(0);
		private final Keyword cDeKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cDeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDeINTTerminalRuleCall_3_0 = (RuleCall)cDeAssignment_3.eContents().get(0);
		private final Keyword cAteKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cAteAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cAteINTTerminalRuleCall_5_0 = (RuleCall)cAteAssignment_5.eContents().get(0);
		private final Keyword cFacaKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cCodeAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cCodeImplementacaoParserRuleCall_7_0 = (RuleCall)cCodeAssignment_7.eContents().get(0);
		private final Assignment cFimparaAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cFimparaFimParaParserRuleCall_8_0 = (RuleCall)cFimparaAssignment_8.eContents().get(0);
		
		////LigarMotorDC:
		//// 'ligarMotor' '(' porta=VariavelOuPorta ')' ';'
		////;
		////
		////DesligarMotorDC:
		//// 'desligarMotor' porta=VariavelOuPorta';'
		////;
		//// ITERACAO
		//// ITERACAO
		//// ITERACAO
		//// PARA, ENQUANTO, REPITA ATE
		//Para:
		//"para" variavel=ID "de" de=INT "ate" ate=INT "faca"
		//(code+=Implementacao)*
		//(fimpara=FimPara)
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//"para" variavel=ID "de" de=INT "ate" ate=INT "faca"
		//(code+=Implementacao)*
		//(fimpara=FimPara)
		public Group getGroup() { return cGroup; }
		
		//"para"
		public Keyword getParaKeyword_0() { return cParaKeyword_0; }
		
		//variavel=ID
		public Assignment getVariavelAssignment_1() { return cVariavelAssignment_1; }
		
		//ID
		public RuleCall getVariavelIDTerminalRuleCall_1_0() { return cVariavelIDTerminalRuleCall_1_0; }
		
		//"de"
		public Keyword getDeKeyword_2() { return cDeKeyword_2; }
		
		//de=INT
		public Assignment getDeAssignment_3() { return cDeAssignment_3; }
		
		//INT
		public RuleCall getDeINTTerminalRuleCall_3_0() { return cDeINTTerminalRuleCall_3_0; }
		
		//"ate"
		public Keyword getAteKeyword_4() { return cAteKeyword_4; }
		
		//ate=INT
		public Assignment getAteAssignment_5() { return cAteAssignment_5; }
		
		//INT
		public RuleCall getAteINTTerminalRuleCall_5_0() { return cAteINTTerminalRuleCall_5_0; }
		
		//"faca"
		public Keyword getFacaKeyword_6() { return cFacaKeyword_6; }
		
		//(code+=Implementacao)*
		public Assignment getCodeAssignment_7() { return cCodeAssignment_7; }
		
		//Implementacao
		public RuleCall getCodeImplementacaoParserRuleCall_7_0() { return cCodeImplementacaoParserRuleCall_7_0; }
		
		//(fimpara=FimPara)
		public Assignment getFimparaAssignment_8() { return cFimparaAssignment_8; }
		
		//FimPara
		public RuleCall getFimparaFimParaParserRuleCall_8_0() { return cFimparaFimParaParserRuleCall_8_0; }
	}
	public class FimParaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.FimPara");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final Keyword cNameFimparaKeyword_0 = (Keyword)cNameAssignment.eContents().get(0);
		
		//FimPara:
		//name="fimpara"
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name="fimpara"
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//"fimpara"
		public Keyword getNameFimparaKeyword_0() { return cNameFimparaKeyword_0; }
	}
	public class EnquantoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.Enquanto");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEnquantoKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValorEsquerdaAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValorEsquerdaVariavelValorParserRuleCall_2_0 = (RuleCall)cValorEsquerdaAssignment_2.eContents().get(0);
		private final Assignment cRelacaoAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cRelacaoLogicoParserRuleCall_3_0 = (RuleCall)cRelacaoAssignment_3.eContents().get(0);
		private final Assignment cValorDireitaAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cValorDireitaVariavelValorParserRuleCall_4_0 = (RuleCall)cValorDireitaAssignment_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cFacaKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cCodeAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cCodeImplementacaoParserRuleCall_7_0 = (RuleCall)cCodeAssignment_7.eContents().get(0);
		private final Keyword cFimenquantoKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Enquanto:
		//"enquanto" '(' valorEsquerda=VariavelValor relacao=Logico valorDireita=VariavelValor ')' "faca"
		//(code+=Implementacao)*
		//"fimenquanto"
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//"enquanto" '(' valorEsquerda=VariavelValor relacao=Logico valorDireita=VariavelValor ')' "faca"
		//(code+=Implementacao)*
		//"fimenquanto"
		public Group getGroup() { return cGroup; }
		
		//"enquanto"
		public Keyword getEnquantoKeyword_0() { return cEnquantoKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//valorEsquerda=VariavelValor
		public Assignment getValorEsquerdaAssignment_2() { return cValorEsquerdaAssignment_2; }
		
		//VariavelValor
		public RuleCall getValorEsquerdaVariavelValorParserRuleCall_2_0() { return cValorEsquerdaVariavelValorParserRuleCall_2_0; }
		
		//relacao=Logico
		public Assignment getRelacaoAssignment_3() { return cRelacaoAssignment_3; }
		
		//Logico
		public RuleCall getRelacaoLogicoParserRuleCall_3_0() { return cRelacaoLogicoParserRuleCall_3_0; }
		
		//valorDireita=VariavelValor
		public Assignment getValorDireitaAssignment_4() { return cValorDireitaAssignment_4; }
		
		//VariavelValor
		public RuleCall getValorDireitaVariavelValorParserRuleCall_4_0() { return cValorDireitaVariavelValorParserRuleCall_4_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
		
		//"faca"
		public Keyword getFacaKeyword_6() { return cFacaKeyword_6; }
		
		//(code+=Implementacao)*
		public Assignment getCodeAssignment_7() { return cCodeAssignment_7; }
		
		//Implementacao
		public RuleCall getCodeImplementacaoParserRuleCall_7_0() { return cCodeImplementacaoParserRuleCall_7_0; }
		
		//"fimenquanto"
		public Keyword getFimenquantoKeyword_8() { return cFimenquantoKeyword_8; }
	}
	public class RepitaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.Repita");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRepitaKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cCodeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cCodeImplementacaoParserRuleCall_1_0 = (RuleCall)cCodeAssignment_1.eContents().get(0);
		private final Keyword cAteKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cValorEsquerdaAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cValorEsquerdaVariavelValorParserRuleCall_4_0 = (RuleCall)cValorEsquerdaAssignment_4.eContents().get(0);
		private final Assignment cRelacaoAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cRelacaoLogicoParserRuleCall_5_0 = (RuleCall)cRelacaoAssignment_5.eContents().get(0);
		private final Assignment cValorDireitaAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cValorDireitaVariavelValorParserRuleCall_6_0 = (RuleCall)cValorDireitaAssignment_6.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Repita:
		//"repita"
		//(code+=Implementacao)*
		//"ate" '(' valorEsquerda=VariavelValor relacao=Logico valorDireita=VariavelValor ')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//"repita"
		//(code+=Implementacao)*
		//"ate" '(' valorEsquerda=VariavelValor relacao=Logico valorDireita=VariavelValor ')'
		public Group getGroup() { return cGroup; }
		
		//"repita"
		public Keyword getRepitaKeyword_0() { return cRepitaKeyword_0; }
		
		//(code+=Implementacao)*
		public Assignment getCodeAssignment_1() { return cCodeAssignment_1; }
		
		//Implementacao
		public RuleCall getCodeImplementacaoParserRuleCall_1_0() { return cCodeImplementacaoParserRuleCall_1_0; }
		
		//"ate"
		public Keyword getAteKeyword_2() { return cAteKeyword_2; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }
		
		//valorEsquerda=VariavelValor
		public Assignment getValorEsquerdaAssignment_4() { return cValorEsquerdaAssignment_4; }
		
		//VariavelValor
		public RuleCall getValorEsquerdaVariavelValorParserRuleCall_4_0() { return cValorEsquerdaVariavelValorParserRuleCall_4_0; }
		
		//relacao=Logico
		public Assignment getRelacaoAssignment_5() { return cRelacaoAssignment_5; }
		
		//Logico
		public RuleCall getRelacaoLogicoParserRuleCall_5_0() { return cRelacaoLogicoParserRuleCall_5_0; }
		
		//valorDireita=VariavelValor
		public Assignment getValorDireitaAssignment_6() { return cValorDireitaAssignment_6; }
		
		//VariavelValor
		public RuleCall getValorDireitaVariavelValorParserRuleCall_6_0() { return cValorDireitaVariavelValorParserRuleCall_6_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }
	}
	public class SeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.Se");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cValorEsquerdaAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValorEsquerdaVariavelValorParserRuleCall_1_0 = (RuleCall)cValorEsquerdaAssignment_1.eContents().get(0);
		private final Assignment cRelacaoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cRelacaoLogicoParserRuleCall_2_0 = (RuleCall)cRelacaoAssignment_2.eContents().get(0);
		private final Assignment cValorDireitaAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValorDireitaVariavelValorParserRuleCall_3_0 = (RuleCall)cValorDireitaAssignment_3.eContents().get(0);
		private final Keyword cEntaoKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cCodeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cCodeImplementacaoParserRuleCall_5_0 = (RuleCall)cCodeAssignment_5.eContents().get(0);
		private final Assignment cSenaoAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cSenaoSenaoParserRuleCall_6_0 = (RuleCall)cSenaoAssignment_6.eContents().get(0);
		private final Assignment cFimseAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cFimseFimseParserRuleCall_7_0 = (RuleCall)cFimseAssignment_7.eContents().get(0);
		
		//// CONTROLE
		//// CONTROLE
		//// CONTROLE
		//// SE SENAO, ESCOLHA CASO
		//Se:
		//'se' valorEsquerda=VariavelValor relacao=Logico valorDireita=VariavelValor 'entao'
		//(code+=Implementacao)*
		//(senao=Senao)?
		//(fimse=Fimse)
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'se' valorEsquerda=VariavelValor relacao=Logico valorDireita=VariavelValor 'entao'
		//(code+=Implementacao)*
		//(senao=Senao)?
		//(fimse=Fimse)
		public Group getGroup() { return cGroup; }
		
		//'se'
		public Keyword getSeKeyword_0() { return cSeKeyword_0; }
		
		//valorEsquerda=VariavelValor
		public Assignment getValorEsquerdaAssignment_1() { return cValorEsquerdaAssignment_1; }
		
		//VariavelValor
		public RuleCall getValorEsquerdaVariavelValorParserRuleCall_1_0() { return cValorEsquerdaVariavelValorParserRuleCall_1_0; }
		
		//relacao=Logico
		public Assignment getRelacaoAssignment_2() { return cRelacaoAssignment_2; }
		
		//Logico
		public RuleCall getRelacaoLogicoParserRuleCall_2_0() { return cRelacaoLogicoParserRuleCall_2_0; }
		
		//valorDireita=VariavelValor
		public Assignment getValorDireitaAssignment_3() { return cValorDireitaAssignment_3; }
		
		//VariavelValor
		public RuleCall getValorDireitaVariavelValorParserRuleCall_3_0() { return cValorDireitaVariavelValorParserRuleCall_3_0; }
		
		//'entao'
		public Keyword getEntaoKeyword_4() { return cEntaoKeyword_4; }
		
		//(code+=Implementacao)*
		public Assignment getCodeAssignment_5() { return cCodeAssignment_5; }
		
		//Implementacao
		public RuleCall getCodeImplementacaoParserRuleCall_5_0() { return cCodeImplementacaoParserRuleCall_5_0; }
		
		//(senao=Senao)?
		public Assignment getSenaoAssignment_6() { return cSenaoAssignment_6; }
		
		//Senao
		public RuleCall getSenaoSenaoParserRuleCall_6_0() { return cSenaoSenaoParserRuleCall_6_0; }
		
		//(fimse=Fimse)
		public Assignment getFimseAssignment_7() { return cFimseAssignment_7; }
		
		//Fimse
		public RuleCall getFimseFimseParserRuleCall_7_0() { return cFimseFimseParserRuleCall_7_0; }
	}
	public class FimseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.Fimse");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final Keyword cNameFimseKeyword_0 = (Keyword)cNameAssignment.eContents().get(0);
		
		//Fimse:
		//name='fimse'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name='fimse'
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//'fimse'
		public Keyword getNameFimseKeyword_0() { return cNameFimseKeyword_0; }
	}
	public class SenaoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.Senao");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSenaoKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cCodeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cCodeImplementacaoParserRuleCall_1_0 = (RuleCall)cCodeAssignment_1.eContents().get(0);
		
		//Senao:
		//'senao'
		//(code+=Implementacao)*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'senao'
		//(code+=Implementacao)*
		public Group getGroup() { return cGroup; }
		
		//'senao'
		public Keyword getSenaoKeyword_0() { return cSenaoKeyword_0; }
		
		//(code+=Implementacao)*
		public Assignment getCodeAssignment_1() { return cCodeAssignment_1; }
		
		//Implementacao
		public RuleCall getCodeImplementacaoParserRuleCall_1_0() { return cCodeImplementacaoParserRuleCall_1_0; }
	}
	public class EscolhaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.Escolha");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEscolhaKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cValorAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValorValorReferenciaParserRuleCall_1_0 = (RuleCall)cValorAssignment_1.eContents().get(0);
		private final Assignment cCasosAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCasosCasoParserRuleCall_2_0 = (RuleCall)cCasosAssignment_2.eContents().get(0);
		private final Keyword cFimescolhaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Escolha:
		//'escolha' valor=ValorReferencia
		//(casos+=Caso)+
		//'fimescolha'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'escolha' valor=ValorReferencia
		//(casos+=Caso)+
		//'fimescolha'
		public Group getGroup() { return cGroup; }
		
		//'escolha'
		public Keyword getEscolhaKeyword_0() { return cEscolhaKeyword_0; }
		
		//valor=ValorReferencia
		public Assignment getValorAssignment_1() { return cValorAssignment_1; }
		
		//ValorReferencia
		public RuleCall getValorValorReferenciaParserRuleCall_1_0() { return cValorValorReferenciaParserRuleCall_1_0; }
		
		//(casos+=Caso)+
		public Assignment getCasosAssignment_2() { return cCasosAssignment_2; }
		
		//Caso
		public RuleCall getCasosCasoParserRuleCall_2_0() { return cCasosCasoParserRuleCall_2_0; }
		
		//'fimescolha'
		public Keyword getFimescolhaKeyword_3() { return cFimescolhaKeyword_3; }
	}
	public class CasoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.Caso");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCasoKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cValorAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValorTextoOuNumeroParserRuleCall_1_0 = (RuleCall)cValorAssignment_1.eContents().get(0);
		private final Keyword cFacaKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cCodigoAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cCodigoCodigoParserRuleCall_3_0 = (RuleCall)cCodigoAssignment_3.eContents().get(0);
		private final Keyword cFimcasoKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Caso:
		//'caso' valor=TextoOuNumero 'faca'
		//(codigo+=Codigo)
		//'fimcaso'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'caso' valor=TextoOuNumero 'faca'
		//(codigo+=Codigo)
		//'fimcaso'
		public Group getGroup() { return cGroup; }
		
		//'caso'
		public Keyword getCasoKeyword_0() { return cCasoKeyword_0; }
		
		//valor=TextoOuNumero
		public Assignment getValorAssignment_1() { return cValorAssignment_1; }
		
		//TextoOuNumero
		public RuleCall getValorTextoOuNumeroParserRuleCall_1_0() { return cValorTextoOuNumeroParserRuleCall_1_0; }
		
		//'faca'
		public Keyword getFacaKeyword_2() { return cFacaKeyword_2; }
		
		//(codigo+=Codigo)
		public Assignment getCodigoAssignment_3() { return cCodigoAssignment_3; }
		
		//Codigo
		public RuleCall getCodigoCodigoParserRuleCall_3_0() { return cCodigoCodigoParserRuleCall_3_0; }
		
		//'fimcaso'
		public Keyword getFimcasoKeyword_4() { return cFimcasoKeyword_4; }
	}
	public class FuncaoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.Funcao");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFuncaoKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cParametroAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cParametroParametroParserRuleCall_2_0 = (RuleCall)cParametroAssignment_2.eContents().get(0);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTipoAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTipoTipoEnumRuleCall_4_0 = (RuleCall)cTipoAssignment_4.eContents().get(0);
		private final Assignment cCodigoAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cCodigoImplementacaoParserRuleCall_5_0 = (RuleCall)cCodigoAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cRetorneKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cRetornoAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cRetornoVariavelValorParserRuleCall_6_1_0 = (RuleCall)cRetornoAssignment_6_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		private final Keyword cFimfuncaoKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		////FUNCAO
		//Funcao:
		//'funcao' name=ID (parametro=Parametro)? ':' tipo=Tipo
		//(codigo+=Implementacao)*
		//('retorne' retorno=VariavelValor ';')?
		//'fimfuncao'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'funcao' name=ID (parametro=Parametro)? ':' tipo=Tipo
		//(codigo+=Implementacao)*
		//('retorne' retorno=VariavelValor ';')?
		//'fimfuncao'
		public Group getGroup() { return cGroup; }
		
		//'funcao'
		public Keyword getFuncaoKeyword_0() { return cFuncaoKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//(parametro=Parametro)?
		public Assignment getParametroAssignment_2() { return cParametroAssignment_2; }
		
		//Parametro
		public RuleCall getParametroParametroParserRuleCall_2_0() { return cParametroParametroParserRuleCall_2_0; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//tipo=Tipo
		public Assignment getTipoAssignment_4() { return cTipoAssignment_4; }
		
		//Tipo
		public RuleCall getTipoTipoEnumRuleCall_4_0() { return cTipoTipoEnumRuleCall_4_0; }
		
		//(codigo+=Implementacao)*
		public Assignment getCodigoAssignment_5() { return cCodigoAssignment_5; }
		
		//Implementacao
		public RuleCall getCodigoImplementacaoParserRuleCall_5_0() { return cCodigoImplementacaoParserRuleCall_5_0; }
		
		//('retorne' retorno=VariavelValor ';')?
		public Group getGroup_6() { return cGroup_6; }
		
		//'retorne'
		public Keyword getRetorneKeyword_6_0() { return cRetorneKeyword_6_0; }
		
		//retorno=VariavelValor
		public Assignment getRetornoAssignment_6_1() { return cRetornoAssignment_6_1; }
		
		//VariavelValor
		public RuleCall getRetornoVariavelValorParserRuleCall_6_1_0() { return cRetornoVariavelValorParserRuleCall_6_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_6_2() { return cSemicolonKeyword_6_2; }
		
		//'fimfuncao'
		public Keyword getFimfuncaoKeyword_7() { return cFimfuncaoKeyword_7; }
	}
	public class ParametroElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.Parametro");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cValorAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValorVariavelNomeParserRuleCall_1_0 = (RuleCall)cValorAssignment_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//Parametro:
		//'(' (valor+=VariavelNome)* ')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'(' (valor+=VariavelNome)* ')'
		public Group getGroup() { return cGroup; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }
		
		//(valor+=VariavelNome)*
		public Assignment getValorAssignment_1() { return cValorAssignment_1; }
		
		//VariavelNome
		public RuleCall getValorVariavelNomeParserRuleCall_1_0() { return cValorVariavelNomeParserRuleCall_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2() { return cRightParenthesisKeyword_2; }
	}
	public class EsperaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.Espera");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEsperarKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValorAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValorINTTerminalRuleCall_2_0 = (RuleCall)cValorAssignment_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		////DELAY
		//Espera:
		//'esperar' '(' valor=INT ')' ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'esperar' '(' valor=INT ')' ';'
		public Group getGroup() { return cGroup; }
		
		//'esperar'
		public Keyword getEsperarKeyword_0() { return cEsperarKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//valor=INT
		public Assignment getValorAssignment_2() { return cValorAssignment_2; }
		
		//INT
		public RuleCall getValorINTTerminalRuleCall_2_0() { return cValorINTTerminalRuleCall_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
		
		//';'
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}
	public class SomaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.Soma");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameReceberValorParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cValorEsquerdaAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValorEsquerdaVariavelOuNumeroParserRuleCall_1_0 = (RuleCall)cValorEsquerdaAssignment_1.eContents().get(0);
		private final Keyword cPlusSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValorDireitaAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValorDireitaVariavelOuNumeroParserRuleCall_3_0 = (RuleCall)cValorDireitaAssignment_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//// Matematica
		//Soma:
		//name=ReceberValor valorEsquerda=VariavelOuNumero '+' valorDireita=VariavelOuNumero';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ReceberValor valorEsquerda=VariavelOuNumero '+' valorDireita=VariavelOuNumero';'
		public Group getGroup() { return cGroup; }
		
		//name=ReceberValor
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ReceberValor
		public RuleCall getNameReceberValorParserRuleCall_0_0() { return cNameReceberValorParserRuleCall_0_0; }
		
		//valorEsquerda=VariavelOuNumero
		public Assignment getValorEsquerdaAssignment_1() { return cValorEsquerdaAssignment_1; }
		
		//VariavelOuNumero
		public RuleCall getValorEsquerdaVariavelOuNumeroParserRuleCall_1_0() { return cValorEsquerdaVariavelOuNumeroParserRuleCall_1_0; }
		
		//'+'
		public Keyword getPlusSignKeyword_2() { return cPlusSignKeyword_2; }
		
		//valorDireita=VariavelOuNumero
		public Assignment getValorDireitaAssignment_3() { return cValorDireitaAssignment_3; }
		
		//VariavelOuNumero
		public RuleCall getValorDireitaVariavelOuNumeroParserRuleCall_3_0() { return cValorDireitaVariavelOuNumeroParserRuleCall_3_0; }
		
		//';'
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}
	
	public class TipoPortaElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.TipoPorta");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cDIGITALEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cDIGITALDIGITALKeyword_0_0 = (Keyword)cDIGITALEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cANALOGICAEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cANALOGICAANALOGICAKeyword_1_0 = (Keyword)cANALOGICAEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum TipoPorta:
		//DIGITAL|ANALOGICA
		//;
		public EnumRule getRule() { return rule; }
		
		//DIGITAL|ANALOGICA
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//DIGITAL
		public EnumLiteralDeclaration getDIGITALEnumLiteralDeclaration_0() { return cDIGITALEnumLiteralDeclaration_0; }
		
		public Keyword getDIGITALDIGITALKeyword_0_0() { return cDIGITALDIGITALKeyword_0_0; }
		
		//ANALOGICA
		public EnumLiteralDeclaration getANALOGICAEnumLiteralDeclaration_1() { return cANALOGICAEnumLiteralDeclaration_1; }
		
		public Keyword getANALOGICAANALOGICAKeyword_1_0() { return cANALOGICAANALOGICAKeyword_1_0; }
	}
	public class TipoElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.Tipo");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cTextoEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cTextoTextoKeyword_0_0 = (Keyword)cTextoEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cNumeroEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cNumeroNumeroKeyword_1_0 = (Keyword)cNumeroEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum Tipo:
		//Texto | Numero
		//;
		public EnumRule getRule() { return rule; }
		
		//Texto | Numero
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Texto
		public EnumLiteralDeclaration getTextoEnumLiteralDeclaration_0() { return cTextoEnumLiteralDeclaration_0; }
		
		public Keyword getTextoTextoKeyword_0_0() { return cTextoTextoKeyword_0_0; }
		
		//Numero
		public EnumLiteralDeclaration getNumeroEnumLiteralDeclaration_1() { return cNumeroEnumLiteralDeclaration_1; }
		
		public Keyword getNumeroNumeroKeyword_1_0() { return cNumeroNumeroKeyword_1_0; }
	}
	public class DirecaoElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.Direcao");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cFRENTEEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cFRENTEFRENTEKeyword_0_0 = (Keyword)cFRENTEEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cTRASEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cTRASTRASKeyword_1_0 = (Keyword)cTRASEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum Direcao:
		//FRENTE|TRAS
		//;
		public EnumRule getRule() { return rule; }
		
		//FRENTE|TRAS
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//FRENTE
		public EnumLiteralDeclaration getFRENTEEnumLiteralDeclaration_0() { return cFRENTEEnumLiteralDeclaration_0; }
		
		public Keyword getFRENTEFRENTEKeyword_0_0() { return cFRENTEFRENTEKeyword_0_0; }
		
		//TRAS
		public EnumLiteralDeclaration getTRASEnumLiteralDeclaration_1() { return cTRASEnumLiteralDeclaration_1; }
		
		public Keyword getTRASTRASKeyword_1_0() { return cTRASTRASKeyword_1_0; }
	}
	
	private final ModelElements pModel;
	private final CodigoElements pCodigo;
	private final ImplementacaoElements pImplementacao;
	private final PortaElements pPorta;
	private final TipoPortaElements eTipoPorta;
	private final PortaAnalogicaElements pPortaAnalogica;
	private final AnalogicaOuIdElements pAnalogicaOuId;
	private final PortaDigitalElements pPortaDigital;
	private final DigitalOuIdElements pDigitalOuId;
	private final TerminalRule tANALOGICA;
	private final ReceberValorElements pReceberValor;
	private final ExistenteVariavelRecebeElements pExistenteVariavelRecebe;
	private final ValorReferenciaElements pValorReferencia;
	private final NovaVariavelRecebeElements pNovaVariavelRecebe;
	private final VariavelNomeElements pVariavelNome;
	private final VariavelOuPortaElements pVariavelOuPorta;
	private final VariavelOuNumeroElements pVariavelOuNumero;
	private final NomeElements pNome;
	private final ConteudoEscreverElements pConteudoEscrever;
	private final TextoElements pTexto;
	private final InteiroElements pInteiro;
	private final TextoOuNumeroElements pTextoOuNumero;
	private final ValorLiteralElements pValorLiteral;
	private final VariavelValorElements pVariavelValor;
	private final DisplayValorElements pDisplayValor;
	private final VariavelElements pVariavel;
	private final VariavelExistenteElements pVariavelExistente;
	private final TerminalRule tCONSTANTENOME;
	private final ConstanteVariavelElements pConstanteVariavel;
	private final ConstanteElements pConstante;
	private final TipoElements eTipo;
	private final ControleElements pControle;
	private final LogicoElements pLogico;
	private final LerElements pLer;
	private final FuncaoLerElements pFuncaoLer;
	private final LerDigitalElements pLerDigital;
	private final FuncaoLerDigitalElements pFuncaoLerDigital;
	private final LerAnalogicaElements pLerAnalogica;
	private final FuncaoLerAnalogicaElements pFuncaoLerAnalogica;
	private final EscreverElements pEscrever;
	private final TelaElements pTela;
	private final BipElements pBip;
	private final TipoBipElements pTipoBip;
	private final LigarElements pLigar;
	private final DesligarElements pDesligar;
	private final ServoElements pServo;
	private final DirecaoElements eDirecao;
	private final MotorDCElements pMotorDC;
	private final AndarElements pAndar;
	private final PararElements pParar;
	private final ParaElements pPara;
	private final FimParaElements pFimPara;
	private final EnquantoElements pEnquanto;
	private final RepitaElements pRepita;
	private final SeElements pSe;
	private final FimseElements pFimse;
	private final SenaoElements pSenao;
	private final EscolhaElements pEscolha;
	private final CasoElements pCaso;
	private final FuncaoElements pFuncao;
	private final ParametroElements pParametro;
	private final EsperaElements pEspera;
	private final SomaElements pSoma;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public OiArdubotGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.pCodigo = new CodigoElements();
		this.pImplementacao = new ImplementacaoElements();
		this.pPorta = new PortaElements();
		this.eTipoPorta = new TipoPortaElements();
		this.pPortaAnalogica = new PortaAnalogicaElements();
		this.pAnalogicaOuId = new AnalogicaOuIdElements();
		this.pPortaDigital = new PortaDigitalElements();
		this.pDigitalOuId = new DigitalOuIdElements();
		this.tANALOGICA = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.ANALOGICA");
		this.pReceberValor = new ReceberValorElements();
		this.pExistenteVariavelRecebe = new ExistenteVariavelRecebeElements();
		this.pValorReferencia = new ValorReferenciaElements();
		this.pNovaVariavelRecebe = new NovaVariavelRecebeElements();
		this.pVariavelNome = new VariavelNomeElements();
		this.pVariavelOuPorta = new VariavelOuPortaElements();
		this.pVariavelOuNumero = new VariavelOuNumeroElements();
		this.pNome = new NomeElements();
		this.pConteudoEscrever = new ConteudoEscreverElements();
		this.pTexto = new TextoElements();
		this.pInteiro = new InteiroElements();
		this.pTextoOuNumero = new TextoOuNumeroElements();
		this.pValorLiteral = new ValorLiteralElements();
		this.pVariavelValor = new VariavelValorElements();
		this.pDisplayValor = new DisplayValorElements();
		this.pVariavel = new VariavelElements();
		this.pVariavelExistente = new VariavelExistenteElements();
		this.tCONSTANTENOME = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.oiardubot.OiArdubot.CONSTANTENOME");
		this.pConstanteVariavel = new ConstanteVariavelElements();
		this.pConstante = new ConstanteElements();
		this.eTipo = new TipoElements();
		this.pControle = new ControleElements();
		this.pLogico = new LogicoElements();
		this.pLer = new LerElements();
		this.pFuncaoLer = new FuncaoLerElements();
		this.pLerDigital = new LerDigitalElements();
		this.pFuncaoLerDigital = new FuncaoLerDigitalElements();
		this.pLerAnalogica = new LerAnalogicaElements();
		this.pFuncaoLerAnalogica = new FuncaoLerAnalogicaElements();
		this.pEscrever = new EscreverElements();
		this.pTela = new TelaElements();
		this.pBip = new BipElements();
		this.pTipoBip = new TipoBipElements();
		this.pLigar = new LigarElements();
		this.pDesligar = new DesligarElements();
		this.pServo = new ServoElements();
		this.eDirecao = new DirecaoElements();
		this.pMotorDC = new MotorDCElements();
		this.pAndar = new AndarElements();
		this.pParar = new PararElements();
		this.pPara = new ParaElements();
		this.pFimPara = new FimParaElements();
		this.pEnquanto = new EnquantoElements();
		this.pRepita = new RepitaElements();
		this.pSe = new SeElements();
		this.pFimse = new FimseElements();
		this.pSenao = new SenaoElements();
		this.pEscolha = new EscolhaElements();
		this.pCaso = new CasoElements();
		this.pFuncao = new FuncaoElements();
		this.pParametro = new ParametroElements();
		this.pEspera = new EsperaElements();
		this.pSoma = new SomaElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("br.edu.utfpr.oiardubot.OiArdubot".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//(var+="Variaveis")?
	//(variaveis+=Variavel)*
	//(constantes+=Constante)*
	//ini+="Inicio"
	//(codigo+=Implementacao)*
	//fim+="Fim"
	//;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//Codigo:
	//(code+=Implementacao)*
	//;
	public CodigoElements getCodigoAccess() {
		return pCodigo;
	}
	
	public ParserRule getCodigoRule() {
		return getCodigoAccess().getRule();
	}
	
	//Implementacao:
	//Se|VariavelExistente|Tela|Ligar|Desligar|Bip|Escolha|Para|Enquanto|Repita|Ler|Servo|MotorDC|Funcao|Espera|Escrever|LerDigital|LerAnalogica|Andar|Parar
	//;
	public ImplementacaoElements getImplementacaoAccess() {
		return pImplementacao;
	}
	
	public ParserRule getImplementacaoRule() {
		return getImplementacaoAccess().getRule();
	}
	
	//Porta:
	//name=(PortaDigital|PortaAnalogica)
	//;
	public PortaElements getPortaAccess() {
		return pPorta;
	}
	
	public ParserRule getPortaRule() {
		return getPortaAccess().getRule();
	}
	
	//enum TipoPorta:
	//DIGITAL|ANALOGICA
	//;
	public TipoPortaElements getTipoPortaAccess() {
		return eTipoPorta;
	}
	
	public EnumRule getTipoPortaRule() {
		return getTipoPortaAccess().getRule();
	}
	
	//PortaAnalogica:
	//valor=AnalogicaOuId
	//;
	public PortaAnalogicaElements getPortaAnalogicaAccess() {
		return pPortaAnalogica;
	}
	
	public ParserRule getPortaAnalogicaRule() {
		return getPortaAnalogicaAccess().getRule();
	}
	
	//AnalogicaOuId:
	//ANALOGICA | ID
	//;
	public AnalogicaOuIdElements getAnalogicaOuIdAccess() {
		return pAnalogicaOuId;
	}
	
	public ParserRule getAnalogicaOuIdRule() {
		return getAnalogicaOuIdAccess().getRule();
	}
	
	//PortaDigital:
	//valor=DigitalOuId
	//;
	public PortaDigitalElements getPortaDigitalAccess() {
		return pPortaDigital;
	}
	
	public ParserRule getPortaDigitalRule() {
		return getPortaDigitalAccess().getRule();
	}
	
	//DigitalOuId:
	//INT | ID
	//;
	public DigitalOuIdElements getDigitalOuIdAccess() {
		return pDigitalOuId;
	}
	
	public ParserRule getDigitalOuIdRule() {
		return getDigitalOuIdAccess().getRule();
	}
	
	//terminal ANALOGICA:
	//'A' INT;
	public TerminalRule getANALOGICARule() {
		return tANALOGICA;
	}
	
	//ReceberValor:
	//tipo=(ExistenteVariavelRecebe|NovaVariavelRecebe)
	//;
	public ReceberValorElements getReceberValorAccess() {
		return pReceberValor;
	}
	
	public ParserRule getReceberValorRule() {
		return getReceberValorAccess().getRule();
	}
	
	//ExistenteVariavelRecebe:
	//name=ValorReferencia '<-'
	//;
	public ExistenteVariavelRecebeElements getExistenteVariavelRecebeAccess() {
		return pExistenteVariavelRecebe;
	}
	
	public ParserRule getExistenteVariavelRecebeRule() {
		return getExistenteVariavelRecebeAccess().getRule();
	}
	
	//ValorReferencia:
	//ID
	//;
	public ValorReferenciaElements getValorReferenciaAccess() {
		return pValorReferencia;
	}
	
	public ParserRule getValorReferenciaRule() {
		return getValorReferenciaAccess().getRule();
	}
	
	//NovaVariavelRecebe:
	//VariavelNome '<-'
	//;
	public NovaVariavelRecebeElements getNovaVariavelRecebeAccess() {
		return pNovaVariavelRecebe;
	}
	
	public ParserRule getNovaVariavelRecebeRule() {
		return getNovaVariavelRecebeAccess().getRule();
	}
	
	//VariavelNome:
	//tipo=Tipo name=ID
	//;
	public VariavelNomeElements getVariavelNomeAccess() {
		return pVariavelNome;
	}
	
	public ParserRule getVariavelNomeRule() {
		return getVariavelNomeAccess().getRule();
	}
	
	//VariavelOuPorta:
	//name=Porta
	//;
	public VariavelOuPortaElements getVariavelOuPortaAccess() {
		return pVariavelOuPorta;
	}
	
	public ParserRule getVariavelOuPortaRule() {
		return getVariavelOuPortaAccess().getRule();
	}
	
	//VariavelOuNumero:
	//ID|INT
	//;
	public VariavelOuNumeroElements getVariavelOuNumeroAccess() {
		return pVariavelOuNumero;
	}
	
	public ParserRule getVariavelOuNumeroRule() {
		return getVariavelOuNumeroAccess().getRule();
	}
	
	//Nome:
	//name=ID
	//;
	public NomeElements getNomeAccess() {
		return pNome;
	}
	
	public ParserRule getNomeRule() {
		return getNomeAccess().getRule();
	}
	
	//ConteudoEscrever:
	//Nome | Texto | Inteiro
	//;
	public ConteudoEscreverElements getConteudoEscreverAccess() {
		return pConteudoEscrever;
	}
	
	public ParserRule getConteudoEscreverRule() {
		return getConteudoEscreverAccess().getRule();
	}
	
	//Texto:
	//name=STRING
	//;
	public TextoElements getTextoAccess() {
		return pTexto;
	}
	
	public ParserRule getTextoRule() {
		return getTextoAccess().getRule();
	}
	
	//Inteiro:
	//name=INT
	//;
	public InteiroElements getInteiroAccess() {
		return pInteiro;
	}
	
	public ParserRule getInteiroRule() {
		return getInteiroAccess().getRule();
	}
	
	//TextoOuNumero:
	//STRING | INT
	//;
	public TextoOuNumeroElements getTextoOuNumeroAccess() {
		return pTextoOuNumero;
	}
	
	public ParserRule getTextoOuNumeroRule() {
		return getTextoOuNumeroAccess().getRule();
	}
	
	//ValorLiteral:
	//TextoOuNumero | ANALOGICA
	//;
	public ValorLiteralElements getValorLiteralAccess() {
		return pValorLiteral;
	}
	
	public ParserRule getValorLiteralRule() {
		return getValorLiteralAccess().getRule();
	}
	
	//VariavelValor:
	//ValorLiteral | ValorReferencia
	//;
	public VariavelValorElements getVariavelValorAccess() {
		return pVariavelValor;
	}
	
	public ParserRule getVariavelValorRule() {
		return getVariavelValorAccess().getRule();
	}
	
	//DisplayValor:
	//ID | STRING | INT
	//;
	public DisplayValorElements getDisplayValorAccess() {
		return pDisplayValor;
	}
	
	public ParserRule getDisplayValorRule() {
		return getDisplayValorAccess().getRule();
	}
	
	//Variavel:
	//variavelNome=VariavelNome ('<-' valor=VariavelValor)?';'
	//;
	public VariavelElements getVariavelAccess() {
		return pVariavel;
	}
	
	public ParserRule getVariavelRule() {
		return getVariavelAccess().getRule();
	}
	
	//VariavelExistente:
	//atribuicao=ExistenteVariavelRecebe valor=VariavelValor';'
	//;
	public VariavelExistenteElements getVariavelExistenteAccess() {
		return pVariavelExistente;
	}
	
	public ParserRule getVariavelExistenteRule() {
		return getVariavelExistenteAccess().getRule();
	}
	
	//terminal CONSTANTENOME:
	//('A'..'Z')
	//;
	public TerminalRule getCONSTANTENOMERule() {
		return tCONSTANTENOME;
	}
	
	//ConstanteVariavel:
	//tipo=Tipo variavelNome=ID '<-' valor=VariavelValor';'
	//;
	public ConstanteVariavelElements getConstanteVariavelAccess() {
		return pConstanteVariavel;
	}
	
	public ParserRule getConstanteVariavelRule() {
		return getConstanteVariavelAccess().getRule();
	}
	
	//Constante:
	//'CONSTANTE' variavel=ConstanteVariavel
	//;
	public ConstanteElements getConstanteAccess() {
		return pConstante;
	}
	
	public ParserRule getConstanteRule() {
		return getConstanteAccess().getRule();
	}
	
	//enum Tipo:
	//Texto | Numero
	//;
	public TipoElements getTipoAccess() {
		return eTipo;
	}
	
	public EnumRule getTipoRule() {
		return getTipoAccess().getRule();
	}
	
	//// Controle
	//Controle:
	////ses+=Se
	//paras+=Para
	//;
	public ControleElements getControleAccess() {
		return pControle;
	}
	
	public ParserRule getControleRule() {
		return getControleAccess().getRule();
	}
	
	//Logico:
	//relation = ("="|"<>"|"<"|"<="|">="|">")
	//;
	public LogicoElements getLogicoAccess() {
		return pLogico;
	}
	
	public ParserRule getLogicoRule() {
		return getLogicoAccess().getRule();
	}
	
	//// SENSORIAMENTO
	//// SENSORIAMENTO
	//// SENSORIAMENTO
	//// LER
	////Ler:
	//// atribuicao=ReceberValor ler=FuncaoLer
	////;
	////FuncaoLer:
	//// 'ler' '(' tipoPorta=TipoPorta "," porta=Porta ')' ';'
	////;
	//Ler:
	//atribuicao=ReceberValor ler=FuncaoLer
	//;
	public LerElements getLerAccess() {
		return pLer;
	}
	
	public ParserRule getLerRule() {
		return getLerAccess().getRule();
	}
	
	//FuncaoLer:
	//'ler' '(' ')' ';'
	//;
	public FuncaoLerElements getFuncaoLerAccess() {
		return pFuncaoLer;
	}
	
	public ParserRule getFuncaoLerRule() {
		return getFuncaoLerAccess().getRule();
	}
	
	//LerDigital:
	//atribuicao=ReceberValor ler=FuncaoLerDigital
	//;
	public LerDigitalElements getLerDigitalAccess() {
		return pLerDigital;
	}
	
	public ParserRule getLerDigitalRule() {
		return getLerDigitalAccess().getRule();
	}
	
	//FuncaoLerDigital:
	//'lerDigital' '(' porta=Porta ')' ';'
	//;
	public FuncaoLerDigitalElements getFuncaoLerDigitalAccess() {
		return pFuncaoLerDigital;
	}
	
	public ParserRule getFuncaoLerDigitalRule() {
		return getFuncaoLerDigitalAccess().getRule();
	}
	
	//LerAnalogica:
	//atribuicao=ReceberValor ler=FuncaoLerAnalogica
	//;
	public LerAnalogicaElements getLerAnalogicaAccess() {
		return pLerAnalogica;
	}
	
	public ParserRule getLerAnalogicaRule() {
		return getLerAnalogicaAccess().getRule();
	}
	
	//FuncaoLerAnalogica:
	//'lerAnalogica' '(' porta=Porta ')' ';'
	//;
	public FuncaoLerAnalogicaElements getFuncaoLerAnalogicaAccess() {
		return pFuncaoLerAnalogica;
	}
	
	public ParserRule getFuncaoLerAnalogicaRule() {
		return getFuncaoLerAnalogicaAccess().getRule();
	}
	
	//// NOTIFICACAO
	//// NOTIFICACAO
	//// NOTIFICACAO
	//// DISPLAY, BIP, LIGAR
	//Escrever:
	//'escrever' mensagem=ConteudoEscrever';'
	//;
	public EscreverElements getEscreverAccess() {
		return pEscrever;
	}
	
	public ParserRule getEscreverRule() {
		return getEscreverAccess().getRule();
	}
	
	//Tela:
	//'tela' mensagem=DisplayValor ';'
	//;
	public TelaElements getTelaAccess() {
		return pTela;
	}
	
	public ParserRule getTelaRule() {
		return getTelaAccess().getRule();
	}
	
	//Bip:
	//'bip' '(' tipo=TipoBip ')' ';'
	//;
	public BipElements getBipAccess() {
		return pBip;
	}
	
	public ParserRule getBipRule() {
		return getBipAccess().getRule();
	}
	
	//TipoBip:
	//'curto'|'medio'|'longo'
	//;
	public TipoBipElements getTipoBipAccess() {
		return pTipoBip;
	}
	
	public ParserRule getTipoBipRule() {
		return getTipoBipAccess().getRule();
	}
	
	//Ligar:
	//'ligar' '(' tipoPorta=TipoPorta "," porta=Porta ')' ';'
	//;
	public LigarElements getLigarAccess() {
		return pLigar;
	}
	
	public ParserRule getLigarRule() {
		return getLigarAccess().getRule();
	}
	
	//Desligar:
	//'desligar' '(' tipoPorta=TipoPorta "," porta=Porta ')' ';'
	//;
	public DesligarElements getDesligarAccess() {
		return pDesligar;
	}
	
	public ParserRule getDesligarRule() {
		return getDesligarAccess().getRule();
	}
	
	//// MOVIMENTO
	//// MOVIMENTO
	//// MOVIMENTO
	//// SERVO, LIGARMOTORDC, DESLIGARMOTORDC
	//Servo:
	//'girarServo' '(' porta=VariavelOuPorta','posicao=INT ')' ';'
	//;
	public ServoElements getServoAccess() {
		return pServo;
	}
	
	public ParserRule getServoRule() {
		return getServoAccess().getRule();
	}
	
	//enum Direcao:
	//FRENTE|TRAS
	//;
	public DirecaoElements getDirecaoAccess() {
		return eDirecao;
	}
	
	public EnumRule getDirecaoRule() {
		return getDirecaoAccess().getRule();
	}
	
	//MotorDC:
	//'motorDC' '(' estado=INT ',' direcao=Direcao ')' ';'
	//;
	public MotorDCElements getMotorDCAccess() {
		return pMotorDC;
	}
	
	public ParserRule getMotorDCRule() {
		return getMotorDCAccess().getRule();
	}
	
	//Andar:
	//'andar' '(' porta=VariavelOuPorta ',' velocidade=INT ',' direcao=Direcao ')' ';'
	//;
	public AndarElements getAndarAccess() {
		return pAndar;
	}
	
	public ParserRule getAndarRule() {
		return getAndarAccess().getRule();
	}
	
	//Parar:
	//'parar' '(' porta=Porta ')' ';'
	//;
	public PararElements getPararAccess() {
		return pParar;
	}
	
	public ParserRule getPararRule() {
		return getPararAccess().getRule();
	}
	
	////LigarMotorDC:
	//// 'ligarMotor' '(' porta=VariavelOuPorta ')' ';'
	////;
	////
	////DesligarMotorDC:
	//// 'desligarMotor' porta=VariavelOuPorta';'
	////;
	//// ITERACAO
	//// ITERACAO
	//// ITERACAO
	//// PARA, ENQUANTO, REPITA ATE
	//Para:
	//"para" variavel=ID "de" de=INT "ate" ate=INT "faca"
	//(code+=Implementacao)*
	//(fimpara=FimPara)
	//;
	public ParaElements getParaAccess() {
		return pPara;
	}
	
	public ParserRule getParaRule() {
		return getParaAccess().getRule();
	}
	
	//FimPara:
	//name="fimpara"
	//;
	public FimParaElements getFimParaAccess() {
		return pFimPara;
	}
	
	public ParserRule getFimParaRule() {
		return getFimParaAccess().getRule();
	}
	
	//Enquanto:
	//"enquanto" '(' valorEsquerda=VariavelValor relacao=Logico valorDireita=VariavelValor ')' "faca"
	//(code+=Implementacao)*
	//"fimenquanto"
	//;
	public EnquantoElements getEnquantoAccess() {
		return pEnquanto;
	}
	
	public ParserRule getEnquantoRule() {
		return getEnquantoAccess().getRule();
	}
	
	//Repita:
	//"repita"
	//(code+=Implementacao)*
	//"ate" '(' valorEsquerda=VariavelValor relacao=Logico valorDireita=VariavelValor ')'
	//;
	public RepitaElements getRepitaAccess() {
		return pRepita;
	}
	
	public ParserRule getRepitaRule() {
		return getRepitaAccess().getRule();
	}
	
	//// CONTROLE
	//// CONTROLE
	//// CONTROLE
	//// SE SENAO, ESCOLHA CASO
	//Se:
	//'se' valorEsquerda=VariavelValor relacao=Logico valorDireita=VariavelValor 'entao'
	//(code+=Implementacao)*
	//(senao=Senao)?
	//(fimse=Fimse)
	//;
	public SeElements getSeAccess() {
		return pSe;
	}
	
	public ParserRule getSeRule() {
		return getSeAccess().getRule();
	}
	
	//Fimse:
	//name='fimse'
	//;
	public FimseElements getFimseAccess() {
		return pFimse;
	}
	
	public ParserRule getFimseRule() {
		return getFimseAccess().getRule();
	}
	
	//Senao:
	//'senao'
	//(code+=Implementacao)*
	//;
	public SenaoElements getSenaoAccess() {
		return pSenao;
	}
	
	public ParserRule getSenaoRule() {
		return getSenaoAccess().getRule();
	}
	
	//Escolha:
	//'escolha' valor=ValorReferencia
	//(casos+=Caso)+
	//'fimescolha'
	//;
	public EscolhaElements getEscolhaAccess() {
		return pEscolha;
	}
	
	public ParserRule getEscolhaRule() {
		return getEscolhaAccess().getRule();
	}
	
	//Caso:
	//'caso' valor=TextoOuNumero 'faca'
	//(codigo+=Codigo)
	//'fimcaso'
	//;
	public CasoElements getCasoAccess() {
		return pCaso;
	}
	
	public ParserRule getCasoRule() {
		return getCasoAccess().getRule();
	}
	
	////FUNCAO
	//Funcao:
	//'funcao' name=ID (parametro=Parametro)? ':' tipo=Tipo
	//(codigo+=Implementacao)*
	//('retorne' retorno=VariavelValor ';')?
	//'fimfuncao'
	//;
	public FuncaoElements getFuncaoAccess() {
		return pFuncao;
	}
	
	public ParserRule getFuncaoRule() {
		return getFuncaoAccess().getRule();
	}
	
	//Parametro:
	//'(' (valor+=VariavelNome)* ')'
	//;
	public ParametroElements getParametroAccess() {
		return pParametro;
	}
	
	public ParserRule getParametroRule() {
		return getParametroAccess().getRule();
	}
	
	////DELAY
	//Espera:
	//'esperar' '(' valor=INT ')' ';'
	//;
	public EsperaElements getEsperaAccess() {
		return pEspera;
	}
	
	public ParserRule getEsperaRule() {
		return getEsperaAccess().getRule();
	}
	
	//// Matematica
	//Soma:
	//name=ReceberValor valorEsquerda=VariavelOuNumero '+' valorDireita=VariavelOuNumero';'
	//;
	public SomaElements getSomaAccess() {
		return pSoma;
	}
	
	public ParserRule getSomaRule() {
		return getSomaAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
