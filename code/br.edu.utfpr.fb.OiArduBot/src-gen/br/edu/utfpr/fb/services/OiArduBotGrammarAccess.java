/*
 * generated by Xtext 2.25.0
 */
package br.edu.utfpr.fb.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class OiArduBotGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.fb.OiArduBot.Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVarAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cVarVariaveisKeyword_0_0 = (Keyword)cVarAssignment_0.eContents().get(0);
		private final Assignment cVariaveisAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVariaveisVariavelParserRuleCall_1_0 = (RuleCall)cVariaveisAssignment_1.eContents().get(0);
		private final Assignment cIniAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cIniInicioKeyword_2_0 = (Keyword)cIniAssignment_2.eContents().get(0);
		private final Assignment cFimAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cFimFimKeyword_3_0 = (Keyword)cFimAssignment_3.eContents().get(0);
		
		//Model:
		//    (var+="Variaveis")?
		//    (variaveis+=Variavel)*
		//    ini+="Inicio"
		//    //codigo+=Codigo*
		//    fim+="Fim"
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//(var+="Variaveis")?
		//(variaveis+=Variavel)*
		//ini+="Inicio"
		////codigo+=Codigo*
		//fim+="Fim"
		public Group getGroup() { return cGroup; }
		
		//(var+="Variaveis")?
		public Assignment getVarAssignment_0() { return cVarAssignment_0; }
		
		//"Variaveis"
		public Keyword getVarVariaveisKeyword_0_0() { return cVarVariaveisKeyword_0_0; }
		
		//(variaveis+=Variavel)*
		public Assignment getVariaveisAssignment_1() { return cVariaveisAssignment_1; }
		
		//Variavel
		public RuleCall getVariaveisVariavelParserRuleCall_1_0() { return cVariaveisVariavelParserRuleCall_1_0; }
		
		//ini+="Inicio"
		public Assignment getIniAssignment_2() { return cIniAssignment_2; }
		
		//"Inicio"
		public Keyword getIniInicioKeyword_2_0() { return cIniInicioKeyword_2_0; }
		
		////codigo+=Codigo*
		//fim+="Fim"
		public Assignment getFimAssignment_3() { return cFimAssignment_3; }
		
		//"Fim"
		public Keyword getFimFimKeyword_3_0() { return cFimFimKeyword_3_0; }
	}
	public class CodigoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.fb.OiArduBot.Codigo");
		private final Assignment cControlesAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cControlesParaParserRuleCall_0 = (RuleCall)cControlesAssignment.eContents().get(0);
		
		//Codigo:
		//    //robos+=(Robo)?
		//    (controles+=Para)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		////robos+=(Robo)?
		//(controles+=Para)?
		public Assignment getControlesAssignment() { return cControlesAssignment; }
		
		//Para
		public RuleCall getControlesParaParserRuleCall_0() { return cControlesParaParserRuleCall_0; }
	}
	public class VariavelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.fb.OiArduBot.Variavel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTipoAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTipoTipoEnumRuleCall_0_0 = (RuleCall)cTipoAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cEqualsSignKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cValorAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cValorSTRINGTerminalRuleCall_2_1_0 = (RuleCall)cValorAssignment_2_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Variavel:
		//    tipo=Tipo name=ID ('=' valor=STRING)?';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//tipo=Tipo name=ID ('=' valor=STRING)?';'
		public Group getGroup() { return cGroup; }
		
		//tipo=Tipo
		public Assignment getTipoAssignment_0() { return cTipoAssignment_0; }
		
		//Tipo
		public RuleCall getTipoTipoEnumRuleCall_0_0() { return cTipoTipoEnumRuleCall_0_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//('=' valor=STRING)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'='
		public Keyword getEqualsSignKeyword_2_0() { return cEqualsSignKeyword_2_0; }
		
		//valor=STRING
		public Assignment getValorAssignment_2_1() { return cValorAssignment_2_1; }
		
		//STRING
		public RuleCall getValorSTRINGTerminalRuleCall_2_1_0() { return cValorSTRINGTerminalRuleCall_2_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}
	public class ControleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.fb.OiArduBot.Controle");
		private final Assignment cParasAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cParasParaParserRuleCall_0 = (RuleCall)cParasAssignment.eContents().get(0);
		
		//// Controle
		//Controle:
		//    //ses+=Se
		//    paras+=Para
		//;
		@Override public ParserRule getRule() { return rule; }
		
		////ses+=Se
		//paras+=Para
		public Assignment getParasAssignment() { return cParasAssignment; }
		
		//Para
		public RuleCall getParasParaParserRuleCall_0() { return cParasParaParserRuleCall_0; }
	}
	public class ParaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.fb.OiArduBot.Para");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cParaKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cDeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDeINTTerminalRuleCall_2_0 = (RuleCall)cDeAssignment_2.eContents().get(0);
		private final Keyword cAteKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cAteAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cAteINTTerminalRuleCall_4_0 = (RuleCall)cAteAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cPassoKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cPassoAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cPassoINTTerminalRuleCall_5_1_0 = (RuleCall)cPassoAssignment_5_1.eContents().get(0);
		private final Keyword cFacaKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cCodigoParaAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cCodigoParaSTRINGTerminalRuleCall_7_0 = (RuleCall)cCodigoParaAssignment_7.eContents().get(0);
		private final Keyword cFimParaKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Para:
		//    "Para" "de" de=INT "ate" ate=INT ("passo" passo=INT)? "Faca"
		//        codigoPara=STRING
		//    "FimPara"
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//"Para" "de" de=INT "ate" ate=INT ("passo" passo=INT)? "Faca"
		//    codigoPara=STRING
		//"FimPara"
		public Group getGroup() { return cGroup; }
		
		//"Para"
		public Keyword getParaKeyword_0() { return cParaKeyword_0; }
		
		//"de"
		public Keyword getDeKeyword_1() { return cDeKeyword_1; }
		
		//de=INT
		public Assignment getDeAssignment_2() { return cDeAssignment_2; }
		
		//INT
		public RuleCall getDeINTTerminalRuleCall_2_0() { return cDeINTTerminalRuleCall_2_0; }
		
		//"ate"
		public Keyword getAteKeyword_3() { return cAteKeyword_3; }
		
		//ate=INT
		public Assignment getAteAssignment_4() { return cAteAssignment_4; }
		
		//INT
		public RuleCall getAteINTTerminalRuleCall_4_0() { return cAteINTTerminalRuleCall_4_0; }
		
		//("passo" passo=INT)?
		public Group getGroup_5() { return cGroup_5; }
		
		//"passo"
		public Keyword getPassoKeyword_5_0() { return cPassoKeyword_5_0; }
		
		//passo=INT
		public Assignment getPassoAssignment_5_1() { return cPassoAssignment_5_1; }
		
		//INT
		public RuleCall getPassoINTTerminalRuleCall_5_1_0() { return cPassoINTTerminalRuleCall_5_1_0; }
		
		//"Faca"
		public Keyword getFacaKeyword_6() { return cFacaKeyword_6; }
		
		//codigoPara=STRING
		public Assignment getCodigoParaAssignment_7() { return cCodigoParaAssignment_7; }
		
		//STRING
		public RuleCall getCodigoParaSTRINGTerminalRuleCall_7_0() { return cCodigoParaSTRINGTerminalRuleCall_7_0; }
		
		//"FimPara"
		public Keyword getFimParaKeyword_8() { return cFimParaKeyword_8; }
	}
	public class SeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.fb.OiArduBot.Se");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cCondicaoSeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cCondicaoSeSTRINGTerminalRuleCall_1_0 = (RuleCall)cCondicaoSeAssignment_1.eContents().get(0);
		private final Assignment cCodigoSeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCodigoSeSTRINGTerminalRuleCall_2_0 = (RuleCall)cCodigoSeAssignment_2.eContents().get(0);
		private final Assignment cSenaoAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSenaoSenaoParserRuleCall_3_0 = (RuleCall)cSenaoAssignment_3.eContents().get(0);
		private final Keyword cFimSeKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Se:
		//    'Se' condicaoSe=STRING
		//        codigoSe=STRING
		//    (senao+=Senao)?
		//    'FimSe'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Se' condicaoSe=STRING
		//    codigoSe=STRING
		//(senao+=Senao)?
		//'FimSe'
		public Group getGroup() { return cGroup; }
		
		//'Se'
		public Keyword getSeKeyword_0() { return cSeKeyword_0; }
		
		//condicaoSe=STRING
		public Assignment getCondicaoSeAssignment_1() { return cCondicaoSeAssignment_1; }
		
		//STRING
		public RuleCall getCondicaoSeSTRINGTerminalRuleCall_1_0() { return cCondicaoSeSTRINGTerminalRuleCall_1_0; }
		
		//codigoSe=STRING
		public Assignment getCodigoSeAssignment_2() { return cCodigoSeAssignment_2; }
		
		//STRING
		public RuleCall getCodigoSeSTRINGTerminalRuleCall_2_0() { return cCodigoSeSTRINGTerminalRuleCall_2_0; }
		
		//(senao+=Senao)?
		public Assignment getSenaoAssignment_3() { return cSenaoAssignment_3; }
		
		//Senao
		public RuleCall getSenaoSenaoParserRuleCall_3_0() { return cSenaoSenaoParserRuleCall_3_0; }
		
		//'FimSe'
		public Keyword getFimSeKeyword_4() { return cFimSeKeyword_4; }
	}
	public class SenaoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.fb.OiArduBot.Senao");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSeNaoKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cCodigoSenaoAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cCodigoSenaoSTRINGTerminalRuleCall_1_0 = (RuleCall)cCodigoSenaoAssignment_1.eContents().get(0);
		
		//Senao:
		//    'SeNao'
		//        codigoSenao=STRING
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'SeNao'
		//    codigoSenao=STRING
		public Group getGroup() { return cGroup; }
		
		//'SeNao'
		public Keyword getSeNaoKeyword_0() { return cSeNaoKeyword_0; }
		
		//codigoSenao=STRING
		public Assignment getCodigoSenaoAssignment_1() { return cCodigoSenaoAssignment_1; }
		
		//STRING
		public RuleCall getCodigoSenaoSTRINGTerminalRuleCall_1_0() { return cCodigoSenaoSTRINGTerminalRuleCall_1_0; }
	}
	public class RoboElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.fb.OiArduBot.Robo");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSensoresAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cSensoresSensoriamentoParserRuleCall_0_0 = (RuleCall)cSensoresAssignment_0.eContents().get(0);
		private final Assignment cAtuadoresAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cAtuadoresAtuacaoParserRuleCall_1_0 = (RuleCall)cAtuadoresAssignment_1.eContents().get(0);
		
		//// Robo
		//Robo:
		//    sensores+=Sensoriamento
		//    atuadores+=Atuacao
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//sensores+=Sensoriamento
		//atuadores+=Atuacao
		public Group getGroup() { return cGroup; }
		
		//sensores+=Sensoriamento
		public Assignment getSensoresAssignment_0() { return cSensoresAssignment_0; }
		
		//Sensoriamento
		public RuleCall getSensoresSensoriamentoParserRuleCall_0_0() { return cSensoresSensoriamentoParserRuleCall_0_0; }
		
		//atuadores+=Atuacao
		public Assignment getAtuadoresAssignment_1() { return cAtuadoresAssignment_1; }
		
		//Atuacao
		public RuleCall getAtuadoresAtuacaoParserRuleCall_1_0() { return cAtuadoresAtuacaoParserRuleCall_1_0; }
	}
	public class SensoriamentoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.fb.OiArduBot.Sensoriamento");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSensorAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cSensorVariavelCrossReference_0_0 = (CrossReference)cSensorAssignment_0.eContents().get(0);
		private final RuleCall cSensorVariavelIDTerminalRuleCall_0_0_1 = (RuleCall)cSensorVariavelCrossReference_0_0.eContents().get(1);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLerKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cPortaAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cPortaINTTerminalRuleCall_4_0 = (RuleCall)cPortaAssignment_4.eContents().get(0);
		private final Keyword cCommaKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cTipoAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cTipoTipoPortaEnumRuleCall_6_0 = (RuleCall)cTipoAssignment_6.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cSemicolonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Sensoriamento:
		//    sensor+=[Variavel] '=' 'ler' '(' porta=INT ',' tipo=TipoPorta ')' ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//sensor+=[Variavel] '=' 'ler' '(' porta=INT ',' tipo=TipoPorta ')' ';'
		public Group getGroup() { return cGroup; }
		
		//sensor+=[Variavel]
		public Assignment getSensorAssignment_0() { return cSensorAssignment_0; }
		
		//[Variavel]
		public CrossReference getSensorVariavelCrossReference_0_0() { return cSensorVariavelCrossReference_0_0; }
		
		//ID
		public RuleCall getSensorVariavelIDTerminalRuleCall_0_0_1() { return cSensorVariavelIDTerminalRuleCall_0_0_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }
		
		//'ler'
		public Keyword getLerKeyword_2() { return cLerKeyword_2; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }
		
		//porta=INT
		public Assignment getPortaAssignment_4() { return cPortaAssignment_4; }
		
		//INT
		public RuleCall getPortaINTTerminalRuleCall_4_0() { return cPortaINTTerminalRuleCall_4_0; }
		
		//','
		public Keyword getCommaKeyword_5() { return cCommaKeyword_5; }
		
		//tipo=TipoPorta
		public Assignment getTipoAssignment_6() { return cTipoAssignment_6; }
		
		//TipoPorta
		public RuleCall getTipoTipoPortaEnumRuleCall_6_0() { return cTipoTipoPortaEnumRuleCall_6_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }
		
		//';'
		public Keyword getSemicolonKeyword_8() { return cSemicolonKeyword_8; }
	}
	public class AtuacaoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.fb.OiArduBot.Atuacao");
		private final Assignment cNotificacoesAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNotificacoesNotificacaoParserRuleCall_0 = (RuleCall)cNotificacoesAssignment.eContents().get(0);
		
		//Atuacao:
		//    notificacoes+=Notificacao
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//notificacoes+=Notificacao
		public Assignment getNotificacoesAssignment() { return cNotificacoesAssignment; }
		
		//Notificacao
		public RuleCall getNotificacoesNotificacaoParserRuleCall_0() { return cNotificacoesNotificacaoParserRuleCall_0; }
	}
	public class NotificacaoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.fb.OiArduBot.Notificacao");
		private final Assignment cBeepAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cBeepBeepParserRuleCall_0 = (RuleCall)cBeepAssignment.eContents().get(0);
		
		//Notificacao:
		//    beep+=Beep
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//beep+=Beep
		public Assignment getBeepAssignment() { return cBeepAssignment; }
		
		//Beep
		public RuleCall getBeepBeepParserRuleCall_0() { return cBeepBeepParserRuleCall_0; }
	}
	public class BeepElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.fb.OiArduBot.Beep");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAlertaKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cBeepKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTipoAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTipoTipoBeepEnumRuleCall_4_0 = (RuleCall)cTipoAssignment_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Beep:
		//    'alerta' '(' 'beep' ',' tipo=TipoBeep')'';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'alerta' '(' 'beep' ',' tipo=TipoBeep')'';'
		public Group getGroup() { return cGroup; }
		
		//'alerta'
		public Keyword getAlertaKeyword_0() { return cAlertaKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//'beep'
		public Keyword getBeepKeyword_2() { return cBeepKeyword_2; }
		
		//','
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//tipo=TipoBeep
		public Assignment getTipoAssignment_4() { return cTipoAssignment_4; }
		
		//TipoBeep
		public RuleCall getTipoTipoBeepEnumRuleCall_4_0() { return cTipoTipoBeepEnumRuleCall_4_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
		
		//';'
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}
	
	public class TipoElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.fb.OiArduBot.Tipo");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cTextoEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cTextoTextoKeyword_0_0 = (Keyword)cTextoEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cNumeroEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cNumeroNumeroKeyword_1_0 = (Keyword)cNumeroEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum Tipo:
		//    Texto | Numero
		//;
		public EnumRule getRule() { return rule; }
		
		//Texto | Numero
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Texto
		public EnumLiteralDeclaration getTextoEnumLiteralDeclaration_0() { return cTextoEnumLiteralDeclaration_0; }
		
		public Keyword getTextoTextoKeyword_0_0() { return cTextoTextoKeyword_0_0; }
		
		//Numero
		public EnumLiteralDeclaration getNumeroEnumLiteralDeclaration_1() { return cNumeroEnumLiteralDeclaration_1; }
		
		public Keyword getNumeroNumeroKeyword_1_0() { return cNumeroNumeroKeyword_1_0; }
	}
	public class TipoBeepElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.fb.OiArduBot.TipoBeep");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSimplesEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSimplesSimplesKeyword_0_0 = (Keyword)cSimplesEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cDuploEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cDuploDuploKeyword_1_0 = (Keyword)cDuploEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cLongoEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cLongoLongoKeyword_2_0 = (Keyword)cLongoEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum TipoBeep:
		//    Simples | Duplo | Longo
		//;
		public EnumRule getRule() { return rule; }
		
		//Simples | Duplo | Longo
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Simples
		public EnumLiteralDeclaration getSimplesEnumLiteralDeclaration_0() { return cSimplesEnumLiteralDeclaration_0; }
		
		public Keyword getSimplesSimplesKeyword_0_0() { return cSimplesSimplesKeyword_0_0; }
		
		//Duplo
		public EnumLiteralDeclaration getDuploEnumLiteralDeclaration_1() { return cDuploEnumLiteralDeclaration_1; }
		
		public Keyword getDuploDuploKeyword_1_0() { return cDuploDuploKeyword_1_0; }
		
		//Longo
		public EnumLiteralDeclaration getLongoEnumLiteralDeclaration_2() { return cLongoEnumLiteralDeclaration_2; }
		
		public Keyword getLongoLongoKeyword_2_0() { return cLongoLongoKeyword_2_0; }
	}
	public class TipoPortaElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.utfpr.fb.OiArduBot.TipoPorta");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cDigitalEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cDigitalDigitalKeyword_0_0 = (Keyword)cDigitalEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cAnalogicaEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cAnalogicaAnalogicaKeyword_1_0 = (Keyword)cAnalogicaEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum TipoPorta:
		//    Digital | Analogica
		//;
		public EnumRule getRule() { return rule; }
		
		//Digital | Analogica
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Digital
		public EnumLiteralDeclaration getDigitalEnumLiteralDeclaration_0() { return cDigitalEnumLiteralDeclaration_0; }
		
		public Keyword getDigitalDigitalKeyword_0_0() { return cDigitalDigitalKeyword_0_0; }
		
		//Analogica
		public EnumLiteralDeclaration getAnalogicaEnumLiteralDeclaration_1() { return cAnalogicaEnumLiteralDeclaration_1; }
		
		public Keyword getAnalogicaAnalogicaKeyword_1_0() { return cAnalogicaAnalogicaKeyword_1_0; }
	}
	
	private final ModelElements pModel;
	private final CodigoElements pCodigo;
	private final VariavelElements pVariavel;
	private final TipoElements eTipo;
	private final ControleElements pControle;
	private final ParaElements pPara;
	private final SeElements pSe;
	private final SenaoElements pSenao;
	private final RoboElements pRobo;
	private final SensoriamentoElements pSensoriamento;
	private final AtuacaoElements pAtuacao;
	private final NotificacaoElements pNotificacao;
	private final BeepElements pBeep;
	private final TipoBeepElements eTipoBeep;
	private final TipoPortaElements eTipoPorta;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public OiArduBotGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.pCodigo = new CodigoElements();
		this.pVariavel = new VariavelElements();
		this.eTipo = new TipoElements();
		this.pControle = new ControleElements();
		this.pPara = new ParaElements();
		this.pSe = new SeElements();
		this.pSenao = new SenaoElements();
		this.pRobo = new RoboElements();
		this.pSensoriamento = new SensoriamentoElements();
		this.pAtuacao = new AtuacaoElements();
		this.pNotificacao = new NotificacaoElements();
		this.pBeep = new BeepElements();
		this.eTipoBeep = new TipoBeepElements();
		this.eTipoPorta = new TipoPortaElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("br.edu.utfpr.fb.OiArduBot".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//    (var+="Variaveis")?
	//    (variaveis+=Variavel)*
	//    ini+="Inicio"
	//    //codigo+=Codigo*
	//    fim+="Fim"
	//    ;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//Codigo:
	//    //robos+=(Robo)?
	//    (controles+=Para)?
	//;
	public CodigoElements getCodigoAccess() {
		return pCodigo;
	}
	
	public ParserRule getCodigoRule() {
		return getCodigoAccess().getRule();
	}
	
	//Variavel:
	//    tipo=Tipo name=ID ('=' valor=STRING)?';'
	//;
	public VariavelElements getVariavelAccess() {
		return pVariavel;
	}
	
	public ParserRule getVariavelRule() {
		return getVariavelAccess().getRule();
	}
	
	//enum Tipo:
	//    Texto | Numero
	//;
	public TipoElements getTipoAccess() {
		return eTipo;
	}
	
	public EnumRule getTipoRule() {
		return getTipoAccess().getRule();
	}
	
	//// Controle
	//Controle:
	//    //ses+=Se
	//    paras+=Para
	//;
	public ControleElements getControleAccess() {
		return pControle;
	}
	
	public ParserRule getControleRule() {
		return getControleAccess().getRule();
	}
	
	//Para:
	//    "Para" "de" de=INT "ate" ate=INT ("passo" passo=INT)? "Faca"
	//        codigoPara=STRING
	//    "FimPara"
	//;
	public ParaElements getParaAccess() {
		return pPara;
	}
	
	public ParserRule getParaRule() {
		return getParaAccess().getRule();
	}
	
	//Se:
	//    'Se' condicaoSe=STRING
	//        codigoSe=STRING
	//    (senao+=Senao)?
	//    'FimSe'
	//;
	public SeElements getSeAccess() {
		return pSe;
	}
	
	public ParserRule getSeRule() {
		return getSeAccess().getRule();
	}
	
	//Senao:
	//    'SeNao'
	//        codigoSenao=STRING
	//;
	public SenaoElements getSenaoAccess() {
		return pSenao;
	}
	
	public ParserRule getSenaoRule() {
		return getSenaoAccess().getRule();
	}
	
	//// Robo
	//Robo:
	//    sensores+=Sensoriamento
	//    atuadores+=Atuacao
	//;
	public RoboElements getRoboAccess() {
		return pRobo;
	}
	
	public ParserRule getRoboRule() {
		return getRoboAccess().getRule();
	}
	
	//Sensoriamento:
	//    sensor+=[Variavel] '=' 'ler' '(' porta=INT ',' tipo=TipoPorta ')' ';'
	//;
	public SensoriamentoElements getSensoriamentoAccess() {
		return pSensoriamento;
	}
	
	public ParserRule getSensoriamentoRule() {
		return getSensoriamentoAccess().getRule();
	}
	
	//Atuacao:
	//    notificacoes+=Notificacao
	//;
	public AtuacaoElements getAtuacaoAccess() {
		return pAtuacao;
	}
	
	public ParserRule getAtuacaoRule() {
		return getAtuacaoAccess().getRule();
	}
	
	//Notificacao:
	//    beep+=Beep
	//;
	public NotificacaoElements getNotificacaoAccess() {
		return pNotificacao;
	}
	
	public ParserRule getNotificacaoRule() {
		return getNotificacaoAccess().getRule();
	}
	
	//Beep:
	//    'alerta' '(' 'beep' ',' tipo=TipoBeep')'';'
	//;
	public BeepElements getBeepAccess() {
		return pBeep;
	}
	
	public ParserRule getBeepRule() {
		return getBeepAccess().getRule();
	}
	
	//enum TipoBeep:
	//    Simples | Duplo | Longo
	//;
	public TipoBeepElements getTipoBeepAccess() {
		return eTipoBeep;
	}
	
	public EnumRule getTipoBeepRule() {
		return getTipoBeepAccess().getRule();
	}
	
	//enum TipoPorta:
	//    Digital | Analogica
	//;
	public TipoPortaElements getTipoPortaAccess() {
		return eTipoPorta;
	}
	
	public EnumRule getTipoPortaRule() {
		return getTipoPortaAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
