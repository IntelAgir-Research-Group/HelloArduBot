/**
 * generated by Xtext 2.25.0
 */
package br.edu.utfpr.fb.oiArduBot.impl;

import br.edu.utfpr.fb.oiArduBot.OiArduBotPackage;
import br.edu.utfpr.fb.oiArduBot.Sensoriamento;
import br.edu.utfpr.fb.oiArduBot.TipoPorta;
import br.edu.utfpr.fb.oiArduBot.Variavel;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectResolvingEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Sensoriamento</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link br.edu.utfpr.fb.oiArduBot.impl.SensoriamentoImpl#getSensor <em>Sensor</em>}</li>
 *   <li>{@link br.edu.utfpr.fb.oiArduBot.impl.SensoriamentoImpl#getPorta <em>Porta</em>}</li>
 *   <li>{@link br.edu.utfpr.fb.oiArduBot.impl.SensoriamentoImpl#getTipo <em>Tipo</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SensoriamentoImpl extends MinimalEObjectImpl.Container implements Sensoriamento
{
  /**
   * The cached value of the '{@link #getSensor() <em>Sensor</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSensor()
   * @generated
   * @ordered
   */
  protected EList<Variavel> sensor;

  /**
   * The default value of the '{@link #getPorta() <em>Porta</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPorta()
   * @generated
   * @ordered
   */
  protected static final int PORTA_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getPorta() <em>Porta</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPorta()
   * @generated
   * @ordered
   */
  protected int porta = PORTA_EDEFAULT;

  /**
   * The default value of the '{@link #getTipo() <em>Tipo</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTipo()
   * @generated
   * @ordered
   */
  protected static final TipoPorta TIPO_EDEFAULT = TipoPorta.DIGITAL;

  /**
   * The cached value of the '{@link #getTipo() <em>Tipo</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTipo()
   * @generated
   * @ordered
   */
  protected TipoPorta tipo = TIPO_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SensoriamentoImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return OiArduBotPackage.Literals.SENSORIAMENTO;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Variavel> getSensor()
  {
    if (sensor == null)
    {
      sensor = new EObjectResolvingEList<Variavel>(Variavel.class, this, OiArduBotPackage.SENSORIAMENTO__SENSOR);
    }
    return sensor;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getPorta()
  {
    return porta;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPorta(int newPorta)
  {
    int oldPorta = porta;
    porta = newPorta;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OiArduBotPackage.SENSORIAMENTO__PORTA, oldPorta, porta));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TipoPorta getTipo()
  {
    return tipo;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTipo(TipoPorta newTipo)
  {
    TipoPorta oldTipo = tipo;
    tipo = newTipo == null ? TIPO_EDEFAULT : newTipo;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OiArduBotPackage.SENSORIAMENTO__TIPO, oldTipo, tipo));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case OiArduBotPackage.SENSORIAMENTO__SENSOR:
        return getSensor();
      case OiArduBotPackage.SENSORIAMENTO__PORTA:
        return getPorta();
      case OiArduBotPackage.SENSORIAMENTO__TIPO:
        return getTipo();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case OiArduBotPackage.SENSORIAMENTO__SENSOR:
        getSensor().clear();
        getSensor().addAll((Collection<? extends Variavel>)newValue);
        return;
      case OiArduBotPackage.SENSORIAMENTO__PORTA:
        setPorta((Integer)newValue);
        return;
      case OiArduBotPackage.SENSORIAMENTO__TIPO:
        setTipo((TipoPorta)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case OiArduBotPackage.SENSORIAMENTO__SENSOR:
        getSensor().clear();
        return;
      case OiArduBotPackage.SENSORIAMENTO__PORTA:
        setPorta(PORTA_EDEFAULT);
        return;
      case OiArduBotPackage.SENSORIAMENTO__TIPO:
        setTipo(TIPO_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case OiArduBotPackage.SENSORIAMENTO__SENSOR:
        return sensor != null && !sensor.isEmpty();
      case OiArduBotPackage.SENSORIAMENTO__PORTA:
        return porta != PORTA_EDEFAULT;
      case OiArduBotPackage.SENSORIAMENTO__TIPO:
        return tipo != TIPO_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (porta: ");
    result.append(porta);
    result.append(", tipo: ");
    result.append(tipo);
    result.append(')');
    return result.toString();
  }

} //SensoriamentoImpl
