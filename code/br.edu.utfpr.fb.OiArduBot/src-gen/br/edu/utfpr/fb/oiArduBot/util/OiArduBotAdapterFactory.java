/**
 * generated by Xtext 2.25.0
 */
package br.edu.utfpr.fb.oiArduBot.util;

import br.edu.utfpr.fb.oiArduBot.*;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.notify.impl.AdapterFactoryImpl;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * The <b>Adapter Factory</b> for the model.
 * It provides an adapter <code>createXXX</code> method for each class of the model.
 * <!-- end-user-doc -->
 * @see br.edu.utfpr.fb.oiArduBot.OiArduBotPackage
 * @generated
 */
public class OiArduBotAdapterFactory extends AdapterFactoryImpl
{
  /**
   * The cached model package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static OiArduBotPackage modelPackage;

  /**
   * Creates an instance of the adapter factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public OiArduBotAdapterFactory()
  {
    if (modelPackage == null)
    {
      modelPackage = OiArduBotPackage.eINSTANCE;
    }
  }

  /**
   * Returns whether this factory is applicable for the type of the object.
   * <!-- begin-user-doc -->
   * This implementation returns <code>true</code> if the object is either the model's package or is an instance object of the model.
   * <!-- end-user-doc -->
   * @return whether this factory is applicable for the type of the object.
   * @generated
   */
  @Override
  public boolean isFactoryForType(Object object)
  {
    if (object == modelPackage)
    {
      return true;
    }
    if (object instanceof EObject)
    {
      return ((EObject)object).eClass().getEPackage() == modelPackage;
    }
    return false;
  }

  /**
   * The switch that delegates to the <code>createXXX</code> methods.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected OiArduBotSwitch<Adapter> modelSwitch =
    new OiArduBotSwitch<Adapter>()
    {
      @Override
      public Adapter caseModel(Model object)
      {
        return createModelAdapter();
      }
      @Override
      public Adapter caseCodigo(Codigo object)
      {
        return createCodigoAdapter();
      }
      @Override
      public Adapter caseVariavel(Variavel object)
      {
        return createVariavelAdapter();
      }
      @Override
      public Adapter caseControle(Controle object)
      {
        return createControleAdapter();
      }
      @Override
      public Adapter casePara(Para object)
      {
        return createParaAdapter();
      }
      @Override
      public Adapter caseSe(Se object)
      {
        return createSeAdapter();
      }
      @Override
      public Adapter caseSenao(Senao object)
      {
        return createSenaoAdapter();
      }
      @Override
      public Adapter caseRobo(Robo object)
      {
        return createRoboAdapter();
      }
      @Override
      public Adapter caseSensoriamento(Sensoriamento object)
      {
        return createSensoriamentoAdapter();
      }
      @Override
      public Adapter caseAtuacao(Atuacao object)
      {
        return createAtuacaoAdapter();
      }
      @Override
      public Adapter caseNotificacao(Notificacao object)
      {
        return createNotificacaoAdapter();
      }
      @Override
      public Adapter caseBeep(Beep object)
      {
        return createBeepAdapter();
      }
      @Override
      public Adapter defaultCase(EObject object)
      {
        return createEObjectAdapter();
      }
    };

  /**
   * Creates an adapter for the <code>target</code>.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param target the object to adapt.
   * @return the adapter for the <code>target</code>.
   * @generated
   */
  @Override
  public Adapter createAdapter(Notifier target)
  {
    return modelSwitch.doSwitch((EObject)target);
  }


  /**
   * Creates a new adapter for an object of class '{@link br.edu.utfpr.fb.oiArduBot.Model <em>Model</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.edu.utfpr.fb.oiArduBot.Model
   * @generated
   */
  public Adapter createModelAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.edu.utfpr.fb.oiArduBot.Codigo <em>Codigo</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.edu.utfpr.fb.oiArduBot.Codigo
   * @generated
   */
  public Adapter createCodigoAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.edu.utfpr.fb.oiArduBot.Variavel <em>Variavel</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.edu.utfpr.fb.oiArduBot.Variavel
   * @generated
   */
  public Adapter createVariavelAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.edu.utfpr.fb.oiArduBot.Controle <em>Controle</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.edu.utfpr.fb.oiArduBot.Controle
   * @generated
   */
  public Adapter createControleAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.edu.utfpr.fb.oiArduBot.Para <em>Para</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.edu.utfpr.fb.oiArduBot.Para
   * @generated
   */
  public Adapter createParaAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.edu.utfpr.fb.oiArduBot.Se <em>Se</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.edu.utfpr.fb.oiArduBot.Se
   * @generated
   */
  public Adapter createSeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.edu.utfpr.fb.oiArduBot.Senao <em>Senao</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.edu.utfpr.fb.oiArduBot.Senao
   * @generated
   */
  public Adapter createSenaoAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.edu.utfpr.fb.oiArduBot.Robo <em>Robo</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.edu.utfpr.fb.oiArduBot.Robo
   * @generated
   */
  public Adapter createRoboAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.edu.utfpr.fb.oiArduBot.Sensoriamento <em>Sensoriamento</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.edu.utfpr.fb.oiArduBot.Sensoriamento
   * @generated
   */
  public Adapter createSensoriamentoAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.edu.utfpr.fb.oiArduBot.Atuacao <em>Atuacao</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.edu.utfpr.fb.oiArduBot.Atuacao
   * @generated
   */
  public Adapter createAtuacaoAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.edu.utfpr.fb.oiArduBot.Notificacao <em>Notificacao</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.edu.utfpr.fb.oiArduBot.Notificacao
   * @generated
   */
  public Adapter createNotificacaoAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link br.edu.utfpr.fb.oiArduBot.Beep <em>Beep</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see br.edu.utfpr.fb.oiArduBot.Beep
   * @generated
   */
  public Adapter createBeepAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for the default case.
   * <!-- begin-user-doc -->
   * This default implementation returns null.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @generated
   */
  public Adapter createEObjectAdapter()
  {
    return null;
  }

} //OiArduBotAdapterFactory
