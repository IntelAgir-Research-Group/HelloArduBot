/*
 * generated by Xtext 2.25.0
 */
grammar InternalOiArduBot;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package br.edu.utfpr.fb.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package br.edu.utfpr.fb.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import br.edu.utfpr.fb.services.OiArduBotGrammarAccess;

}

@parser::members {

 	private OiArduBotGrammarAccess grammarAccess;

    public InternalOiArduBotParser(TokenStream input, OiArduBotGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected OiArduBotGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_var_0_0='Variaveis'
				{
					newLeafNode(lv_var_0_0, grammarAccess.getModelAccess().getVarVariaveisKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModelRule());
					}
					addWithLastConsumed($current, "var", lv_var_0_0, "Variaveis");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getVariaveisVariavelParserRuleCall_1_0());
				}
				lv_variaveis_1_0=ruleVariavel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"variaveis",
						lv_variaveis_1_0,
						"br.edu.utfpr.fb.OiArduBot.Variavel");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				lv_ini_2_0='Inicio'
				{
					newLeafNode(lv_ini_2_0, grammarAccess.getModelAccess().getIniInicioKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModelRule());
					}
					addWithLastConsumed($current, "ini", lv_ini_2_0, "Inicio");
				}
			)
		)
		(
			(
				lv_fim_3_0='Fim'
				{
					newLeafNode(lv_fim_3_0, grammarAccess.getModelAccess().getFimFimKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModelRule());
					}
					addWithLastConsumed($current, "fim", lv_fim_3_0, "Fim");
				}
			)
		)
	)
;

// Entry rule entryRuleVariavel
entryRuleVariavel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariavelRule()); }
	iv_ruleVariavel=ruleVariavel
	{ $current=$iv_ruleVariavel.current; }
	EOF;

// Rule Variavel
ruleVariavel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getVariavelAccess().getTipoTipoEnumRuleCall_0_0());
				}
				lv_tipo_0_0=ruleTipo
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariavelRule());
					}
					set(
						$current,
						"tipo",
						lv_tipo_0_0,
						"br.edu.utfpr.fb.OiArduBot.Tipo");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getVariavelAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariavelRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='='
			{
				newLeafNode(otherlv_2, grammarAccess.getVariavelAccess().getEqualsSignKeyword_2_0());
			}
			(
				(
					lv_valor_3_0=RULE_STRING
					{
						newLeafNode(lv_valor_3_0, grammarAccess.getVariavelAccess().getValorSTRINGTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVariavelRule());
						}
						setWithLastConsumed(
							$current,
							"valor",
							lv_valor_3_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getVariavelAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRulePara
entryRulePara returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParaRule()); }
	iv_rulePara=rulePara
	{ $current=$iv_rulePara.current; }
	EOF;

// Rule Para
rulePara returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Para'
		{
			newLeafNode(otherlv_0, grammarAccess.getParaAccess().getParaKeyword_0());
		}
		otherlv_1='de'
		{
			newLeafNode(otherlv_1, grammarAccess.getParaAccess().getDeKeyword_1());
		}
		(
			(
				lv_de_2_0=RULE_INT
				{
					newLeafNode(lv_de_2_0, grammarAccess.getParaAccess().getDeINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParaRule());
					}
					setWithLastConsumed(
						$current,
						"de",
						lv_de_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3='ate'
		{
			newLeafNode(otherlv_3, grammarAccess.getParaAccess().getAteKeyword_3());
		}
		(
			(
				lv_ate_4_0=RULE_INT
				{
					newLeafNode(lv_ate_4_0, grammarAccess.getParaAccess().getAteINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParaRule());
					}
					setWithLastConsumed(
						$current,
						"ate",
						lv_ate_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			otherlv_5='passo'
			{
				newLeafNode(otherlv_5, grammarAccess.getParaAccess().getPassoKeyword_5_0());
			}
			(
				(
					lv_passo_6_0=RULE_INT
					{
						newLeafNode(lv_passo_6_0, grammarAccess.getParaAccess().getPassoINTTerminalRuleCall_5_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getParaRule());
						}
						setWithLastConsumed(
							$current,
							"passo",
							lv_passo_6_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
		otherlv_7='Faca'
		{
			newLeafNode(otherlv_7, grammarAccess.getParaAccess().getFacaKeyword_6());
		}
		(
			(
				lv_codigoPara_8_0=RULE_STRING
				{
					newLeafNode(lv_codigoPara_8_0, grammarAccess.getParaAccess().getCodigoParaSTRINGTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParaRule());
					}
					setWithLastConsumed(
						$current,
						"codigoPara",
						lv_codigoPara_8_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_9='FimPara'
		{
			newLeafNode(otherlv_9, grammarAccess.getParaAccess().getFimParaKeyword_8());
		}
	)
;

// Entry rule entryRuleSensoriamento
entryRuleSensoriamento returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSensoriamentoRule()); }
	iv_ruleSensoriamento=ruleSensoriamento
	{ $current=$iv_ruleSensoriamento.current; }
	EOF;

// Rule Sensoriamento
ruleSensoriamento returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSensoriamentoRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getSensoriamentoAccess().getSensorVariavelCrossReference_0_0());
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getSensoriamentoAccess().getEqualsSignKeyword_1());
		}
		otherlv_2='ler'
		{
			newLeafNode(otherlv_2, grammarAccess.getSensoriamentoAccess().getLerKeyword_2());
		}
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getSensoriamentoAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				lv_porta_4_0=RULE_INT
				{
					newLeafNode(lv_porta_4_0, grammarAccess.getSensoriamentoAccess().getPortaINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSensoriamentoRule());
					}
					setWithLastConsumed(
						$current,
						"porta",
						lv_porta_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getSensoriamentoAccess().getCommaKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSensoriamentoAccess().getTipoTipoPortaEnumRuleCall_6_0());
				}
				lv_tipo_6_0=ruleTipoPorta
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSensoriamentoRule());
					}
					set(
						$current,
						"tipo",
						lv_tipo_6_0,
						"br.edu.utfpr.fb.OiArduBot.TipoPorta");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getSensoriamentoAccess().getRightParenthesisKeyword_7());
		}
		otherlv_8=';'
		{
			newLeafNode(otherlv_8, grammarAccess.getSensoriamentoAccess().getSemicolonKeyword_8());
		}
	)
;

// Entry rule entryRuleAtuacao
entryRuleAtuacao returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAtuacaoRule()); }
	iv_ruleAtuacao=ruleAtuacao
	{ $current=$iv_ruleAtuacao.current; }
	EOF;

// Rule Atuacao
ruleAtuacao returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getAtuacaoAccess().getNotificacoesNotificacaoParserRuleCall_0());
			}
			lv_notificacoes_0_0=ruleNotificacao
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getAtuacaoRule());
				}
				add(
					$current,
					"notificacoes",
					lv_notificacoes_0_0,
					"br.edu.utfpr.fb.OiArduBot.Notificacao");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleNotificacao
entryRuleNotificacao returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNotificacaoRule()); }
	iv_ruleNotificacao=ruleNotificacao
	{ $current=$iv_ruleNotificacao.current; }
	EOF;

// Rule Notificacao
ruleNotificacao returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getNotificacaoAccess().getBeepBeepParserRuleCall_0());
			}
			lv_beep_0_0=ruleBeep
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getNotificacaoRule());
				}
				add(
					$current,
					"beep",
					lv_beep_0_0,
					"br.edu.utfpr.fb.OiArduBot.Beep");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleBeep
entryRuleBeep returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBeepRule()); }
	iv_ruleBeep=ruleBeep
	{ $current=$iv_ruleBeep.current; }
	EOF;

// Rule Beep
ruleBeep returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='alerta'
		{
			newLeafNode(otherlv_0, grammarAccess.getBeepAccess().getAlertaKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getBeepAccess().getLeftParenthesisKeyword_1());
		}
		otherlv_2='beep'
		{
			newLeafNode(otherlv_2, grammarAccess.getBeepAccess().getBeepKeyword_2());
		}
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getBeepAccess().getCommaKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBeepAccess().getTipoTipoBeepEnumRuleCall_4_0());
				}
				lv_tipo_4_0=ruleTipoBeep
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBeepRule());
					}
					set(
						$current,
						"tipo",
						lv_tipo_4_0,
						"br.edu.utfpr.fb.OiArduBot.TipoBeep");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getBeepAccess().getRightParenthesisKeyword_5());
		}
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getBeepAccess().getSemicolonKeyword_6());
		}
	)
;

// Rule Tipo
ruleTipo returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Texto'
			{
				$current = grammarAccess.getTipoAccess().getTextoEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getTipoAccess().getTextoEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Numero'
			{
				$current = grammarAccess.getTipoAccess().getNumeroEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getTipoAccess().getNumeroEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule TipoBeep
ruleTipoBeep returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Simples'
			{
				$current = grammarAccess.getTipoBeepAccess().getSimplesEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getTipoBeepAccess().getSimplesEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Duplo'
			{
				$current = grammarAccess.getTipoBeepAccess().getDuploEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getTipoBeepAccess().getDuploEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Longo'
			{
				$current = grammarAccess.getTipoBeepAccess().getLongoEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getTipoBeepAccess().getLongoEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule TipoPorta
ruleTipoPorta returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Digital'
			{
				$current = grammarAccess.getTipoPortaAccess().getDigitalEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getTipoPortaAccess().getDigitalEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Analogica'
			{
				$current = grammarAccess.getTipoPortaAccess().getAnalogicaEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getTipoPortaAccess().getAnalogicaEnumLiteralDeclaration_1());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
