/*
 * generated by Xtext 2.25.0
 */
package br.edu.utfpr.fb.ide.contentassist.antlr;

import br.edu.utfpr.fb.ide.contentassist.antlr.internal.InternalOiArduBotParser;
import br.edu.utfpr.fb.services.OiArduBotGrammarAccess;
import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class OiArduBotParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(OiArduBotGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, OiArduBotGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getTipoAccess().getAlternatives(), "rule__Tipo__Alternatives");
			builder.put(grammarAccess.getTipoBeepAccess().getAlternatives(), "rule__TipoBeep__Alternatives");
			builder.put(grammarAccess.getTipoPortaAccess().getAlternatives(), "rule__TipoPorta__Alternatives");
			builder.put(grammarAccess.getModelAccess().getGroup(), "rule__Model__Group__0");
			builder.put(grammarAccess.getVariavelAccess().getGroup(), "rule__Variavel__Group__0");
			builder.put(grammarAccess.getVariavelAccess().getGroup_2(), "rule__Variavel__Group_2__0");
			builder.put(grammarAccess.getParaAccess().getGroup(), "rule__Para__Group__0");
			builder.put(grammarAccess.getParaAccess().getGroup_5(), "rule__Para__Group_5__0");
			builder.put(grammarAccess.getSeAccess().getGroup(), "rule__Se__Group__0");
			builder.put(grammarAccess.getSenaoAccess().getGroup(), "rule__Senao__Group__0");
			builder.put(grammarAccess.getRoboAccess().getGroup(), "rule__Robo__Group__0");
			builder.put(grammarAccess.getSensoriamentoAccess().getGroup(), "rule__Sensoriamento__Group__0");
			builder.put(grammarAccess.getBeepAccess().getGroup(), "rule__Beep__Group__0");
			builder.put(grammarAccess.getModelAccess().getVarAssignment_0(), "rule__Model__VarAssignment_0");
			builder.put(grammarAccess.getModelAccess().getVariaveisAssignment_1(), "rule__Model__VariaveisAssignment_1");
			builder.put(grammarAccess.getModelAccess().getIniAssignment_2(), "rule__Model__IniAssignment_2");
			builder.put(grammarAccess.getModelAccess().getFimAssignment_3(), "rule__Model__FimAssignment_3");
			builder.put(grammarAccess.getCodigoAccess().getControlesAssignment(), "rule__Codigo__ControlesAssignment");
			builder.put(grammarAccess.getVariavelAccess().getTipoAssignment_0(), "rule__Variavel__TipoAssignment_0");
			builder.put(grammarAccess.getVariavelAccess().getNameAssignment_1(), "rule__Variavel__NameAssignment_1");
			builder.put(grammarAccess.getVariavelAccess().getValorAssignment_2_1(), "rule__Variavel__ValorAssignment_2_1");
			builder.put(grammarAccess.getControleAccess().getParasAssignment(), "rule__Controle__ParasAssignment");
			builder.put(grammarAccess.getParaAccess().getDeAssignment_2(), "rule__Para__DeAssignment_2");
			builder.put(grammarAccess.getParaAccess().getAteAssignment_4(), "rule__Para__AteAssignment_4");
			builder.put(grammarAccess.getParaAccess().getPassoAssignment_5_1(), "rule__Para__PassoAssignment_5_1");
			builder.put(grammarAccess.getParaAccess().getCodigoParaAssignment_7(), "rule__Para__CodigoParaAssignment_7");
			builder.put(grammarAccess.getSeAccess().getCondicaoSeAssignment_1(), "rule__Se__CondicaoSeAssignment_1");
			builder.put(grammarAccess.getSeAccess().getCodigoSeAssignment_2(), "rule__Se__CodigoSeAssignment_2");
			builder.put(grammarAccess.getSeAccess().getSenaoAssignment_3(), "rule__Se__SenaoAssignment_3");
			builder.put(grammarAccess.getSenaoAccess().getCodigoSenaoAssignment_1(), "rule__Senao__CodigoSenaoAssignment_1");
			builder.put(grammarAccess.getRoboAccess().getSensoresAssignment_0(), "rule__Robo__SensoresAssignment_0");
			builder.put(grammarAccess.getRoboAccess().getAtuadoresAssignment_1(), "rule__Robo__AtuadoresAssignment_1");
			builder.put(grammarAccess.getSensoriamentoAccess().getSensorAssignment_0(), "rule__Sensoriamento__SensorAssignment_0");
			builder.put(grammarAccess.getSensoriamentoAccess().getPortaAssignment_4(), "rule__Sensoriamento__PortaAssignment_4");
			builder.put(grammarAccess.getSensoriamentoAccess().getTipoAssignment_6(), "rule__Sensoriamento__TipoAssignment_6");
			builder.put(grammarAccess.getAtuacaoAccess().getNotificacoesAssignment(), "rule__Atuacao__NotificacoesAssignment");
			builder.put(grammarAccess.getNotificacaoAccess().getBeepAssignment(), "rule__Notificacao__BeepAssignment");
			builder.put(grammarAccess.getBeepAccess().getTipoAssignment_4(), "rule__Beep__TipoAssignment_4");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private OiArduBotGrammarAccess grammarAccess;

	@Override
	protected InternalOiArduBotParser createParser() {
		InternalOiArduBotParser result = new InternalOiArduBotParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public OiArduBotGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(OiArduBotGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
